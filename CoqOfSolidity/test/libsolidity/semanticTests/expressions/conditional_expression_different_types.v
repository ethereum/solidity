(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [cond] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Integer 0xcd
        |) in
      let _ :=
        M.define (|
          [ "y" ],
          Value.Integer 0xabab
        |) in
      let _ :=
        M.return_ (|
          Conditional M.get_name (| "cond" |) M.get_name (| "x" |) M.get_name (| "y" |)

        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
