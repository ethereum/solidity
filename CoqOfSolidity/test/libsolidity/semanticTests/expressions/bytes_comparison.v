(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          Value.String "a"
        |) in
      let _ :=
        M.define (|
          [ "x" ],
          Value.String "aa"
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          Value.String "b"
        |) in
      let _ :=
        M.return_ (|
          M.bin_op (|
            "&&",
            M.bin_op (|
              "<",
              M.get_name (| "a" |),
              M.get_name (| "x" |)
            |),
            M.bin_op (|
              "<",
              M.get_name (| "x" |),
              M.get_name (| "b" |)
            |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
