(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Integer 0x1122334455667788990011223344556677889900ff
        |) in
      let _ :=
        M.define (|
          [ "y" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 12
src: 157:39:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 185:1:0declaration: 6isSlot: isOffset: alueSize: src: 180:1:0declaration: 10isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.define (|
          [ "z" ],
          M.call (|
            Ty.path "address",
            [
              M.get_name (| "y" |)
            ]
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 20
src: 237:39:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 260:1:0declaration: 3isSlot: isOffset: alueSize: src: 265:1:0declaration: 14isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.call (|
          M.get_name (| "require" |),
          [
            M.bin_op (|
              "==",
              M.get_name (| "z" |),
              Value.Integer 0x1122334455667788990011223344556677889900
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Integer 0x1122334455667788990011223344556677889900ff
        |) in
      let _ :=
        M.define (|
          [ "y" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 40
src: 502:39:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 530:1:0declaration: 34isSlot: isOffset: alueSize: src: 525:1:0declaration: 38isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.define (|
          [ "z" ],
          M.call (|
            Ty.path "address",
            [
              M.call (|
                Ty.path "address",
                [
                  M.get_name (| "y" |)
                ]
              |)
            ]
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 51
src: 599:39:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 622:1:0declaration: 31isSlot: isOffset: alueSize: src: 627:1:0declaration: 42isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.call (|
          M.get_name (| "require" |),
          [
            M.bin_op (|
              "==",
              M.get_name (| "z" |),
              Value.Integer 0x1122334455667788990011223344556677889900
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
