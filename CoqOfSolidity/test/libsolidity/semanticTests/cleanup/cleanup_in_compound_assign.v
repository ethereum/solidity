(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition test (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          Value.Integer 0xffffffff
        |) in
      let _ :=
        M.define (|
          [ "x" ],
          M.call (|
            Ty.path "uint16",
            [
              M.get_name (| "a" |)
            ]
          |)
        |) in
      let _ :=
        M.define (|
          [ "y" ],
          M.get_name (| "x" |)
        |) in
      let _ :=
        M.assign (|
          "/=",
          M.get_name (| "x" |),
          Value.Integer 0x100
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "y" |),
          M.bin_op (|
            "/",
            M.get_name (| "y" |),
            Value.Integer 0x100
          |)
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.get_name (| "x" |),
            M.get_name (| "y" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
