(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Library *)
Module Lib.
  (* Struct Items *)

  Definition get (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        (* Beginning of a node! *)
id: 12
src: 171:26:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 182:6:0declaration: 10sSlot: isOffset: suffix: slotalueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Lib.


(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "ptr" ],
          M.call (|
            M.member_access (|
              M.get_name (| "Lib" |),
              "get"
            |),
            []
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 29
src: 319:29:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 338:8:0declaration: 24sSlot: isOffset: suffix: slotalueSize: src: 330:4:0declaration: 18isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
