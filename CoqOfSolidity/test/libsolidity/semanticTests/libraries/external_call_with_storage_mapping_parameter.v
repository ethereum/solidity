(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module L.
  Definition f (α : list Value.t) : M :=
    match α with
    | [_a] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "*",
            M.index_access (|
              M.get_name (| "_a" |),
              Some (Value.Integer 0)
            |),
            M.index_access (|
              M.get_name (| "_a" |),
              Some (Value.Integer 1)
            |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End L.


(* Contract *)
Module C.
  Definition x : Value.t :=
    undefined.

  Definition g (α : list Value.t) : M :=
    match α with
    | [_value] =>
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "x" |),
            Some (Value.Integer 0)
          |),
          M.assign (|
            "=",
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 1)
            |),
            M.get_name (| "_value" |)
          |)
        |) in
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "L" |),
              "f"
            |),
            [
              M.get_name (| "x" |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
