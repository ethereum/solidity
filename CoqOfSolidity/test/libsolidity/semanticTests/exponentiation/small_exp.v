(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Default
        |) in
      let _ :=
        M.define (|
          [ "y" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 11
src: 107:73:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 130:1:0declaration: 6isSlot: isOffset: alueSize: src: 160:1:0declaration: 9isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        let _ :=
          M.assign (|
            "=",
            M.get_name (| "r" |),
            M.bin_op (|
              "**",
              M.get_name (| "x" |),
              M.get_name (| "y" |)
            |)
          |) in
        Value.Tuple [] in
      let _ :=
        M.return_ (|
          M.get_name (| "r" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
