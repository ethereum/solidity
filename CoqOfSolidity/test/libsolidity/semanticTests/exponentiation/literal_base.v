(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [x] =>
      let _ :=
        let _ :=
          M.define (|
            [ "a" ],
            M.bin_op (|
              "**",
              Value.Integer 2,
              M.get_name (| "x" |)
            |)
          |) in
        let _ :=
          M.define (|
            [ "b" ],
            M.bin_op (|
              "**",
              M.un_op (|
                true,
                "-",
                Value.Integer 2
              |),
              M.get_name (| "x" |)
            |)
          |) in
        let _ :=
          M.return_ (|
            Value.Tuple [
              M.get_name (| "a" |),
              M.get_name (| "b" |)
            ]
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
