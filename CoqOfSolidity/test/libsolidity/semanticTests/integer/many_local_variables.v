(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition run (Î± : list Value.t) : M :=
    match Î± with
    | [x1, x2, x3] =>
      let _ :=
        M.define (|
          [ "a" ],
          Value.Integer 0x1
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          Value.Integer 0x10
        |) in
      let _ :=
        M.define (|
          [ "c" ],
          Value.Integer 0x100
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "y" |),
          M.bin_op (|
            "+",
            M.bin_op (|
              "+",
              M.bin_op (|
                "+",
                M.bin_op (|
                  "+",
                  M.bin_op (|
                    "+",
                    M.get_name (| "a" |),
                    M.get_name (| "b" |)
                  |),
                  M.get_name (| "c" |)
                |),
                M.get_name (| "x1" |)
              |),
              M.get_name (| "x2" |)
            |),
            M.get_name (| "x3" |)
          |)
        |) in
      let _ :=
        M.assign (|
          "+=",
          M.get_name (| "y" |),
          M.bin_op (|
            "+",
            M.get_name (| "b" |),
            M.get_name (| "x2" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
