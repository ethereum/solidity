(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition x : Value.t :=
    undefined.

  Definition y : Value.t :=
    undefined.

  Definition z : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "x" |),
          M.get_name (| "a" |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "y" |),
          M.call (|
            Ty.path "bytes1",
            [
              M.bin_op (|
                "+",
                M.call (|
                  Ty.path "uint8",
                  [
                    M.get_name (| "x" |)
                  ]
                |),
                Value.Integer 1
              |)
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "z" |),
          M.bin_op (|
            "+",
            M.call (|
              Ty.path "uint8",
              [
                M.get_name (| "y" |)
              ]
            |),
            Value.Integer 1
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "x" |),
          M.bin_op (|
            "+",
            M.get_name (| "z" |),
            Value.Integer 1
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "_x" |),
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
