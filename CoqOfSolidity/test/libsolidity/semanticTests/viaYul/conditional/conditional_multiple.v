(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Conditional M.bin_op (|
            "<",
            Value.Integer 3,
            Value.Integer 0
          |) Conditional M.bin_op (|
            ">",
            Value.Integer 2,
            Value.Integer 1
          |) Value.Integer 2 Value.Integer 1
 Conditional M.bin_op (|
            ">",
            Value.Integer 7,
            Value.Integer 2
          |) Value.Integer 7 Value.Integer 6


        |) in
      let _ :=
        M.return_ (|
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.
