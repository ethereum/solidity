(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "m" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 12
src: 104:60:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 134:1:0declaration: 10isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.define (|
          [ "x" ],
          M.call (|
            Ty.path "uint32",
            [
              M.index_access (|
                M.get_name (| "m" |),
                Some (Value.Integer 0)
              |)
            ]
          |)
        |) in
      let _ :=
        M.define (|
          [ "r" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 25
src: 222:39:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 245:1:0declaration: 23isSlot: isOffset: alueSize: src: 250:1:0declaration: 14isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "correct" |),
          M.bin_op (|
            "&&",
            Value.Tuple [
              M.bin_op (|
                "==",
                M.get_name (| "r" |),
                Value.Integer 0xef15dead
              |)
            ],
            Value.Tuple [
              M.bin_op (|
                "==",
                M.index_access (|
                  M.get_name (| "m" |),
                  Some (Value.Integer 0)
                |),
                Value.Integer 0xdeadbeef15dead
              |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
