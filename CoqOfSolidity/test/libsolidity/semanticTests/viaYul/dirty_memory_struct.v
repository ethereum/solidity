(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Struct S *)

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "s" ],
          Value.Default
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "s" |),
            "m"
          |),
          M.call (|
            NewExpression Ty.array (Ty.path "uint8") None
,
            [
              Value.Integer 1
            ]
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 23
src: 165:56:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 199:1:0declaration: 11isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.define (|
          [ "x" ],
          M.index_access (|
            M.member_access (|
              M.get_name (| "s" |),
              "m"
            |),
            Some (Value.Integer 0)
          |)
        |) in
      let _ :=
        M.define (|
          [ "r" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 34
src: 272:39:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 295:1:0declaration: 32isSlot: isOffset: alueSize: src: 300:1:0declaration: 25isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "correct" |),
          M.bin_op (|
            "==",
            M.get_name (| "r" |),
            Value.Integer 0x01
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
