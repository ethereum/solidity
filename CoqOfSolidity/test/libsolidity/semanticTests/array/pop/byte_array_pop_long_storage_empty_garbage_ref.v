(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  Definition a : Value.t :=
    undefined.

  Definition b : Value.t :=
    undefined.

  Definition data : Value.t :=
    undefined.

  Definition test (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.for_ (|
          M.define (|
            [ "i" ],
            Value.Integer 0
          |),
          M.bin_op (|
            "<=",
            M.get_name (| "i" |),
            Value.Integer 40
          |),
          M.un_op (|
            false,
            "++",
            M.get_name (| "i" |)
          |),
          M.call (|
            M.member_access (|
              M.get_name (| "data" |),
              "push"
            |),
            [
              Value.Integer 0x03
            ]
          |)
        |) in
      let _ :=
        M.for_ (|
          M.define (|
            [ "j" ],
            Value.Integer 0
          |),
          M.bin_op (|
            "<=",
            M.get_name (| "j" |),
            Value.Integer 40
          |),
          M.un_op (|
            false,
            "++",
            M.get_name (| "j" |)
          |),
          let _ :=
            (* Beginning of a node! *)
id: 36
src: 211:61:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: 
evmVersion: cancun
 in
          let _ :=
            M.call (|
              M.member_access (|
                M.get_name (| "data" |),
                "pop"
              |),
              []
            |) in
          Value.Tuple []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
