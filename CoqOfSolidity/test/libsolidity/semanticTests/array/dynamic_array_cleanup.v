(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  Definition spacer : Value.t :=
    undefined.

  Definition dynamic : Value.t :=
    undefined.

  Definition fill (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.for_ (|
          M.define (|
            [ "i" ],
            Value.Integer 0
          |),
          M.bin_op (|
            "<",
            M.get_name (| "i" |),
            Value.Integer 21
          |),
          M.un_op (|
            true,
            "++",
            M.get_name (| "i" |)
          |),
          M.call (|
            M.member_access (|
              M.get_name (| "dynamic" |),
              "push"
            |),
            [
              M.bin_op (|
                "+",
                M.get_name (| "i" |),
                Value.Integer 1
              |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition halfClear (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.while (|
          WhileKind.While,
          M.bin_op (|
            ">",
            M.member_access (|
              M.get_name (| "dynamic" |),
              "length"
            |),
            Value.Integer 5
          |),
          M.call (|
            M.member_access (|
              M.get_name (| "dynamic" |),
              "pop"
            |),
            []
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition fullClear (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.un_op (|
          true,
          "delete",
          M.get_name (| "dynamic" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
