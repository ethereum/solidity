(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition s : Value.t :=
    Value.String "doh".

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "t" ],
          Value.String "ray"
        |) in
      let _ :=
        M.define (|
          [ "x" ],
          Value.Array [
            M.get_name (| "s" |),
            M.get_name (| "t" |),
            Value.String "mi"
          ]
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 1)
            |),
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 2)
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
