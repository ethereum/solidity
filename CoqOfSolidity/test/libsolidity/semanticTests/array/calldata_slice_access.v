(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [x, start, end] =>
      let _ :=
        IndexRangeAccess M.get_name (| "x" |) M.get_name (| "start" |) M.get_name (| "end" |)
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [x, start, end, index] =>
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.index_access (|
              IndexRangeAccess M.get_name (| "x" |) M.get_name (| "start" |) M.get_name (| "end" |)
,
              Some (M.get_name (| "index" |))
            |),
            M.index_access (|
              IndexRangeAccess IndexRangeAccess M.get_name (| "x" |) M.get_name (| "start" |) 
 Value.Integer 0 M.bin_op (|
                "-",
                M.get_name (| "end" |),
                M.get_name (| "start" |)
              |)
,
              Some (M.get_name (| "index" |))
            |),
            M.index_access (|
              IndexRangeAccess IndexRangeAccess M.get_name (| "x" |)  M.get_name (| "end" |)
 M.get_name (| "start" |) 
,
              Some (M.get_name (| "index" |))
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
