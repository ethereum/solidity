(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition arr : Value.t :=
    undefined.

  Definition test : Value.t :=
    Value.Bool false.

  Definition getElement (α : list Value.t) : M :=
    match α with
    | [i] =>
      let _ :=
        M.return_ (|
          M.index_access (|
            M.get_name (| "arr" |),
            Some (M.get_name (| "i" |))
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition testIt (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "i" ],
          M.call (|
            M.member_access (|
              M.get_name (| "this" |),
              "getElement"
            |),
            [
              Value.Integer 5
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "test" |),
          Value.Bool true
        |) in
      let _ :=
        M.return_ (|
          Value.Bool true
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.
