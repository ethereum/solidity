(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition storageArray : Value.t :=
    undefined.

  Definition test (α : list Value.t) : M :=
    match α with
    | [v] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "storageArray" |),
            "push"
          |),
          [
            M.get_name (| "v" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition getLength (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          M.member_access (|
            M.get_name (| "storageArray" |),
            "length"
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition fetch (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.return_ (|
          M.index_access (|
            M.get_name (| "storageArray" |),
            Some (M.get_name (| "a" |))
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
