(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module Test.
  Definition s : Value.t :=
    undefined.

  Definition b : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [_s, n] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "b" |),
          M.call (|
            Ty.path "bytes",
            [
              M.get_name (| "_s" |)
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "s" |),
          M.call (|
            Ty.path "string",
            [
              M.get_name (| "b" |)
            ]
          |)
        |) in
      let _ :=
        M.return_ (|
          M.index_access (|
            M.call (|
              Ty.path "bytes",
              [
                M.get_name (| "s" |)
              ]
            |),
            Some (M.get_name (| "n" |))
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition l (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          M.member_access (|
            M.call (|
              Ty.path "bytes",
              [
                M.get_name (| "s" |)
              ]
            |),
            "length"
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Test.
