(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Contract *)
Module C.
  Definition a : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "a" |),
            "push"
          |),
          []
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "a" |),
            "push"
          |),
          []
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.index_access (|
              M.get_name (| "a" |),
              Some (Value.Integer 0)
            |),
            "push"
          |),
          [
            Value.Integer 0
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.index_access (|
              M.get_name (| "a" |),
              Some (Value.Integer 0)
            |),
            "push"
          |),
          [
            Value.Integer 1
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.index_access (|
              M.get_name (| "a" |),
              Some (Value.Integer 1)
            |),
            "push"
          |),
          [
            Value.Integer 2
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.index_access (|
              M.get_name (| "a" |),
              Some (Value.Integer 1)
            |),
            "push"
          |),
          [
            Value.Integer 3
          ]
        |) in
      let _ :=
        M.define (|
          [ "m" ],
          M.get_name (| "a" |)
        |) in
      let _ :=
        M.return_ (|
          M.get_name (| "m" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
