(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Enum X *)

  (* Event Log *)

  Definition test_log (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "garbled" ],
          M.member_access (|
            M.get_name (| "X" |),
            "A"
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 19
src: 133:45:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 156:7:0declaration: 15isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        EmitStatement M.call (|
          M.get_name (| "Log" |),
          [
            M.get_name (| "garbled" |)
          ]
        |)
 in
      let _ :=
        M.return_ (|
          Value.Integer 1
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition test_log_ok (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          M.member_access (|
            M.get_name (| "X" |),
            "A"
          |)
        |) in
      let _ :=
        EmitStatement M.call (|
          M.get_name (| "Log" |),
          [
            M.get_name (| "x" |)
          ]
        |)
 in
      let _ :=
        M.return_ (|
          Value.Integer 1
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
