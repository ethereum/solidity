(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Contract *)
Module C.
  (* Struct S *)

  Definition f (α : list Value.t) : M :=
    match α with
    | [s] =>
      let _ :=
        M.define (|
          [ "tmp1" ],
          M.member_access (|
            M.get_name (| "s" |),
            "a"
          |)
        |) in
      let _ :=
        M.define (|
          [ "tmp2" ],
          M.member_access (|
            M.get_name (| "s" |),
            "b"
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 26
src: 243:64:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 266:1:0declaration: 12isSlot: isOffset: alueSize: src: 288:1:0declaration: 14isSlot: isOffset: alueSize: src: 271:4:0declaration: 17isSlot: isOffset: alueSize: src: 293:4:0declaration: 22isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
