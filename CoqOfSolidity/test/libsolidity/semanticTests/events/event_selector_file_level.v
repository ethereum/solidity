(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Event E *)

(* Library *)
Module L.
  (* Event E *)
End L.


(* Contract *)
Module C.
  Definition main (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.get_name (| "assert" |),
          [
            M.bin_op (|
              "==",
              M.member_access (|
                M.get_name (| "E" |),
                "selector"
              |),
              M.member_access (|
                M.member_access (|
                  M.get_name (| "L" |),
                  "E"
                |),
                "selector"
              |)
            |)
          ]
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.member_access (|
              M.get_name (| "E" |),
              "selector"
            |),
            M.member_access (|
              M.member_access (|
                M.get_name (| "L" |),
                "E"
              |),
              "selector"
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
