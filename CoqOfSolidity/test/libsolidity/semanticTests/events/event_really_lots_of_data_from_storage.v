(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module ClientReceipt.
  Definition x : Value.t :=
    undefined.

  (* Event Deposit *)

  Definition deposit (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "x" |),
            "push"
          |),
          [
            Value.String "A"
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "x" |),
            "push"
          |),
          [
            Value.String "B"
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "x" |),
            "push"
          |),
          [
            Value.String "C"
          ]
        |) in
      let _ :=
        EmitStatement M.call (|
          M.get_name (| "Deposit" |),
          [
            Value.Integer 10,
            M.get_name (| "x" |),
            Value.Integer 15
          ]
        |)
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End ClientReceipt.
