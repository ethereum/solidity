(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition a : Value.t :=
    undefined.

  (* Beginning of a node! *)
id: 26
src: 39:121:0
nodeType: ModifierDefinition
name: mod
nameLocation: 48:3:0
documentation: 
visibility: internal
parameters: ParameterList.make [
    Definition x : Value.t :=
      undefined.
  ]
virtual: 0
overrides: 
body: let _ :=
    M.define (|
      [ "b" ],
      M.get_name (| "x" |)
    |) in
  let _ :=
    M.assign (|
      "+=",
      M.get_name (| "a" |),
      M.get_name (| "b" |)
    |) in
  let _ :=
    (* Beginning of a node! *)
id: 14
src: 112:1:0
nodeType: PlaceholderStatement
 in
  let _ :=
    M.assign (|
      "-=",
      M.get_name (| "a" |),
      M.get_name (| "b" |)
    |) in
  let _ :=
    M.call (|
      M.get_name (| "assert" |),
      [
        M.bin_op (|
          "==",
          M.get_name (| "b" |),
          M.get_name (| "x" |)
        |)
      ]
    |) in
  Value.Tuple []


  Definition f (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.get_name (| "a" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
