(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 8
src: 17:60:0
nodeType: ModifierDefinition
name: m
nameLocation: 26:1:0
documentation: 
visibility: internal
parameters: ParameterList.make [
    Definition condition : Value.t :=
      undefined.
  ]
virtual: 0
overrides: 
body: let _ :=
    if M.get_name (| "condition" |) then
      (* Beginning of a node! *)
id: 5
src: 69:1:0
nodeType: PlaceholderStatement

    else
      Value.Tuple [] in
  Value.Tuple []


  Definition f (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "r" |),
            Some (Value.Integer 2)
          |),
          Value.Integer 3
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
