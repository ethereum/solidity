(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition data : Value.t :=
    undefined.

  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "|=",
          M.get_name (| "data" |),
          Value.Integer 2
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  (* Beginning of a node! *)
id: 20
src: 87:59:0
nodeType: ModifierDefinition
name: mod1
nameLocation: 96:4:0
documentation: 
visibility: internal
parameters: ParameterList.make []
virtual: 1
overrides: 
body: let _ :=
    M.assign (|
      "|=",
      M.get_name (| "data" |),
      Value.Integer 1
    |) in
  let _ :=
    (* Beginning of a node! *)
id: 18
src: 138:1:0
nodeType: PlaceholderStatement
 in
  Value.Tuple []


  Definition getData (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          M.get_name (| "data" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.


(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 40
src: 253:60:0
nodeType: ModifierDefinition
name: mod1
nameLocation: 262:4:0
documentation: 
visibility: internal
parameters: ParameterList.make []
virtual: 0
overrides: OverrideSpecifier.make []
body: let _ :=
    M.assign (|
      "|=",
      M.get_name (| "data" |),
      Value.Integer 4
    |) in
  let _ :=
    (* Beginning of a node! *)
id: 38
src: 305:1:0
nodeType: PlaceholderStatement
 in
  Value.Tuple []
baseModifiers: [g: "]

End C.
