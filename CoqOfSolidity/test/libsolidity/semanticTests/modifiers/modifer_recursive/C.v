(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Module C.
  Definition code : Code.t := {|
    Code.name := "C_33";
    Code.hex_name := 0x435f333300000000000000000000000000000000000000000000000000000000;
    Code.functions :=
      [
        
      ];
    Code.body :=
      M.scope (
        do! ltac:(M.monadic (
          M.scope (
            do! ltac:(M.monadic (
              M.declare (|
                ["_1"],
                Some (M.call_function (|
                  "memoryguard",
                  [
                    [Literal.number 0x80]
                  ]
                |))
              |)
            )) in
            do! ltac:(M.monadic (
              M.expr_stmt (|
                M.call_function (|
                  "mstore",
                  [
                    [Literal.number 64];
                    M.get_var (| "_1" |)
                  ]
                |)
              |)
            )) in
            do! ltac:(M.monadic (
              M.if_ (|
                M.call_function (|
                  "callvalue",
                  []
                |),
                M.scope (
                  do! ltac:(M.monadic (
                    M.expr_stmt (|
                      M.call_function (|
                        "revert",
                        [
                          [Literal.number 0];
                          [Literal.number 0]
                        ]
                      |)
                    |)
                  )) in
                  M.pure BlockUnit.Tt
                )
              |)
            )) in
            do! ltac:(M.monadic (
              M.declare (|
                ["_2"],
                Some (M.call_function (|
                  "datasize",
                  [
                    [Literal.string 0x435f33335f6465706c6f79656400000000000000000000000000000000000000]
                  ]
                |))
              |)
            )) in
            do! ltac:(M.monadic (
              M.expr_stmt (|
                M.call_function (|
                  "codecopy",
                  [
                    M.get_var (| "_1" |);
                    M.call_function (|
                      "dataoffset",
                      [
                        [Literal.string 0x435f33335f6465706c6f79656400000000000000000000000000000000000000]
                      ]
                    |);
                    M.get_var (| "_2" |)
                  ]
                |)
              |)
            )) in
            do! ltac:(M.monadic (
              M.expr_stmt (|
                M.call_function (|
                  "return",
                  [
                    M.get_var (| "_1" |);
                    M.get_var (| "_2" |)
                  ]
                |)
              |)
            )) in
            M.pure BlockUnit.Tt
          )
        )) in
        M.pure BlockUnit.Tt
      );
  |}.

  Module deployed.
    Definition code : Code.t := {|
      Code.name := "C_33_deployed";
      Code.hex_name := 0x435f33335f6465706c6f79656400000000000000000000000000000000000000;
      Code.functions :=
        [
          Code.Function.make (
            "modifier_mod1",
            ["var_r"; "var_x"],
            ["_1"],
            M.scope (
              do! ltac:(M.monadic (
                M.declare (|
                  ["_2"],
                  Some (M.call_function (|
                    "sload",
                    [
                      [Literal.number 0x00]
                    ]
                  |))
                |)
              )) in
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "eq",
                    [
                      M.get_var (| "_2" |);
                      M.call_function (|
                        "not",
                        [
                          [Literal.number 0]
                        ]
                      |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "mstore",
                          [
                            [Literal.number 0x00];
                            M.call_function (|
                              "shl",
                              [
                                [Literal.number 224];
                                [Literal.number 0x4e487b71]
                              ]
                            |)
                          ]
                        |)
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "mstore",
                          [
                            [Literal.number 4];
                            [Literal.number 0x11]
                          ]
                        |)
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "revert",
                          [
                            [Literal.number 0x00];
                            [Literal.number 0x24]
                          ]
                        |)
                      |)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.expr_stmt (|
                  M.call_function (|
                    "sstore",
                    [
                      [Literal.number 0x00];
                      M.call_function (|
                        "add",
                        [
                          M.get_var (| "_2" |);
                          [Literal.number 1]
                        ]
                      |)
                    ]
                  |)
                |)
              )) in
              do! ltac:(M.monadic (
                M.declare (|
                  ["expr"],
                  Some ([Literal.number 0x00])
                |)
              )) in
              do! ltac:(M.monadic (
                M.switch (|
                  M.call_function (|
                    "iszero",
                    [
                      M.get_var (| "var_x" |)
                    ]
                  |),
                  [
                    (
                      Some (Literal.number 0),
                      M.scope (
                        do! ltac:(M.monadic (
                          M.declare (|
                            ["diff"],
                            Some ([Literal.number 0x00])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["diff"],
                            Some (M.call_function (|
                              "add",
                              [
                                M.get_var (| "var_x" |);
                                M.call_function (|
                                  "not",
                                  [
                                    [Literal.number 0]
                                  ]
                                |)
                              ]
                            |))
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.if_ (|
                            M.call_function (|
                              "gt",
                              [
                                M.get_var (| "diff" |);
                                M.get_var (| "var_x" |)
                              ]
                            |),
                            M.scope (
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "mstore",
                                    [
                                      [Literal.number 0x00];
                                      M.call_function (|
                                        "shl",
                                        [
                                          [Literal.number 224];
                                          [Literal.number 0x4e487b71]
                                        ]
                                      |)
                                    ]
                                  |)
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "mstore",
                                    [
                                      [Literal.number 4];
                                      [Literal.number 0x11]
                                    ]
                                  |)
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "revert",
                                    [
                                      [Literal.number 0x00];
                                      [Literal.number 0x24]
                                    ]
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.declare (|
                            ["base"],
                            Some (M.call_function (|
                              "modifier_mod1",
                              [
                                [Literal.number 0x00];
                                M.get_var (| "diff" |)
                              ]
                            |))
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.declare (|
                            ["power"],
                            Some ([Literal.number 0x00])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["power"],
                            Some (M.call_function (|
                              "checked_exp_unsigned_777",
                              [
                                M.get_var (| "base" |);
                                [Literal.number 2]
                              ]
                            |))
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["expr"],
                            Some (M.get_var (| "power" |))
                          |)
                        )) in
                        M.pure BlockUnit.Tt
                      )
                    );
                    (
                      None,
                      M.scope (
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["expr"],
                            Some ([Literal.number 0x02])
                          |)
                        )) in
                        M.pure BlockUnit.Tt
                      )
                    )
                  ]
                |)
              )) in
              do! ltac:(M.monadic (
                M.assign (|
                  ["_1"],
                  Some (M.get_var (| "expr" |))
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          );
          Code.Function.make (
            "checked_exp_unsigned_777",
            ["base"; "exponent"],
            ["power"],
            M.scope (
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "iszero",
                    [
                      M.get_var (| "exponent" |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.assign (|
                        ["power"],
                        Some ([Literal.number 1])
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.leave (||)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "iszero",
                    [
                      M.get_var (| "base" |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.assign (|
                        ["power"],
                        Some ([Literal.number 0])
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.leave (||)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.switch (|
                  M.get_var (| "base" |),
                  [
                    (
                      Some (Literal.number 1),
                      M.scope (
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["power"],
                            Some ([Literal.number 1])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.leave (||)
                        )) in
                        M.pure BlockUnit.Tt
                      )
                    );
                    (
                      Some (Literal.number 2),
                      M.scope (
                        do! ltac:(M.monadic (
                          M.if_ (|
                            M.call_function (|
                              "gt",
                              [
                                M.get_var (| "exponent" |);
                                [Literal.number 255]
                              ]
                            |),
                            M.scope (
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "mstore",
                                    [
                                      [Literal.number 0];
                                      M.call_function (|
                                        "shl",
                                        [
                                          [Literal.number 224];
                                          [Literal.number 0x4e487b71]
                                        ]
                                      |)
                                    ]
                                  |)
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "mstore",
                                    [
                                      [Literal.number 4];
                                      [Literal.number 0x11]
                                    ]
                                  |)
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "revert",
                                    [
                                      [Literal.number 0];
                                      [Literal.number 0x24]
                                    ]
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["power"],
                            Some (M.call_function (|
                              "shl",
                              [
                                M.get_var (| "exponent" |);
                                [Literal.number 1]
                              ]
                            |))
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.declare (|
                            ["_1"],
                            Some ([Literal.number 0])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["_1"],
                            Some ([Literal.number 0])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.leave (||)
                        )) in
                        M.pure BlockUnit.Tt
                      )
                    )
                  ]
                |)
              )) in
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "or",
                    [
                      M.call_function (|
                        "and",
                        [
                          M.call_function (|
                            "lt",
                            [
                              M.get_var (| "base" |);
                              [Literal.number 11]
                            ]
                          |);
                          M.call_function (|
                            "lt",
                            [
                              M.get_var (| "exponent" |);
                              [Literal.number 78]
                            ]
                          |)
                        ]
                      |);
                      M.call_function (|
                        "and",
                        [
                          M.call_function (|
                            "lt",
                            [
                              M.get_var (| "base" |);
                              [Literal.number 307]
                            ]
                          |);
                          M.call_function (|
                            "lt",
                            [
                              M.get_var (| "exponent" |);
                              [Literal.number 32]
                            ]
                          |)
                        ]
                      |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.assign (|
                        ["power"],
                        Some (M.call_function (|
                          "exp",
                          [
                            M.get_var (| "base" |);
                            M.get_var (| "exponent" |)
                          ]
                        |))
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.declare (|
                        ["_2"],
                        Some ([Literal.number 0])
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.assign (|
                        ["_2"],
                        Some ([Literal.number 0])
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.leave (||)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.declare (|
                  ["exponent_1"],
                  Some (M.get_var (| "exponent" |))
                |)
              )) in
              do! ltac:(M.monadic (
                M.declare (|
                  ["power_1"],
                  Some ([Literal.number 0])
                |)
              )) in
              do! ltac:(M.monadic (
                M.declare (|
                  ["base_1"],
                  Some ([Literal.number 0])
                |)
              )) in
              do! ltac:(M.monadic (
                M.assign (|
                  ["power_1"],
                  Some ([Literal.number 1])
                |)
              )) in
              do! ltac:(M.monadic (
                M.assign (|
                  ["base_1"],
                  Some (M.get_var (| "base" |))
                |)
              )) in
              do! ltac:(M.monadic (
                do!
                  M.scope (
                    M.pure BlockUnit.Tt
                  ) in
                ltac:(M.monadic (
                  M.for_ (|
                    ltac:(M.monadic (
                      M.call_function (|
                        "gt",
                        [
                          M.get_var (| "exponent_1" |);
                          [Literal.number 1]
                        ]
                      |)
                    )),
                    M.scope (
                      M.pure BlockUnit.Tt
                    ),
                    M.scope (
                      do! ltac:(M.monadic (
                        M.if_ (|
                          M.call_function (|
                            "gt",
                            [
                              M.get_var (| "base_1" |);
                              M.call_function (|
                                "div",
                                [
                                  M.call_function (|
                                    "not",
                                    [
                                      [Literal.number 0]
                                    ]
                                  |);
                                  M.get_var (| "base_1" |)
                                ]
                              |)
                            ]
                          |),
                          M.scope (
                            do! ltac:(M.monadic (
                              M.expr_stmt (|
                                M.call_function (|
                                  "mstore",
                                  [
                                    [Literal.number 0];
                                    M.call_function (|
                                      "shl",
                                      [
                                        [Literal.number 224];
                                        [Literal.number 0x4e487b71]
                                      ]
                                    |)
                                  ]
                                |)
                              |)
                            )) in
                            do! ltac:(M.monadic (
                              M.expr_stmt (|
                                M.call_function (|
                                  "mstore",
                                  [
                                    [Literal.number 4];
                                    [Literal.number 0x11]
                                  ]
                                |)
                              |)
                            )) in
                            do! ltac:(M.monadic (
                              M.expr_stmt (|
                                M.call_function (|
                                  "revert",
                                  [
                                    [Literal.number 0];
                                    [Literal.number 0x24]
                                  ]
                                |)
                              |)
                            )) in
                            M.pure BlockUnit.Tt
                          )
                        |)
                      )) in
                      do! ltac:(M.monadic (
                        M.if_ (|
                          M.call_function (|
                            "and",
                            [
                              M.get_var (| "exponent_1" |);
                              [Literal.number 1]
                            ]
                          |),
                          M.scope (
                            do! ltac:(M.monadic (
                              M.assign (|
                                ["power_1"],
                                Some (M.call_function (|
                                  "mul",
                                  [
                                    M.get_var (| "power_1" |);
                                    M.get_var (| "base_1" |)
                                  ]
                                |))
                              |)
                            )) in
                            M.pure BlockUnit.Tt
                          )
                        |)
                      )) in
                      do! ltac:(M.monadic (
                        M.assign (|
                          ["base_1"],
                          Some (M.call_function (|
                            "mul",
                            [
                              M.get_var (| "base_1" |);
                              M.get_var (| "base_1" |)
                            ]
                          |))
                        |)
                      )) in
                      do! ltac:(M.monadic (
                        M.assign (|
                          ["exponent_1"],
                          Some (M.call_function (|
                            "shr",
                            [
                              [Literal.number 1];
                              M.get_var (| "exponent_1" |)
                            ]
                          |))
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                ))
              )) in
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "gt",
                    [
                      M.get_var (| "power_1" |);
                      M.call_function (|
                        "div",
                        [
                          M.call_function (|
                            "not",
                            [
                              [Literal.number 0]
                            ]
                          |);
                          M.get_var (| "base_1" |)
                        ]
                      |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "mstore",
                          [
                            [Literal.number 0];
                            M.call_function (|
                              "shl",
                              [
                                [Literal.number 224];
                                [Literal.number 0x4e487b71]
                              ]
                            |)
                          ]
                        |)
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "mstore",
                          [
                            [Literal.number 4];
                            [Literal.number 0x11]
                          ]
                        |)
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "revert",
                          [
                            [Literal.number 0];
                            [Literal.number 0x24]
                          ]
                        |)
                      |)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.assign (|
                  ["power"],
                  Some (M.call_function (|
                    "mul",
                    [
                      M.get_var (| "power_1" |);
                      M.get_var (| "base_1" |)
                    ]
                  |))
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          );
          Code.Function.make (
            "checked_exp_unsigned",
            ["base"],
            ["power"],
            M.scope (
              do! ltac:(M.monadic (
                M.declare (|
                  ["_1"],
                  Some ([Literal.number 0])
                |)
              )) in
              do! ltac:(M.monadic (
                M.assign (|
                  ["_1"],
                  Some ([Literal.number 0])
                |)
              )) in
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "iszero",
                    [
                      M.get_var (| "base" |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.assign (|
                        ["power"],
                        Some ([Literal.number 0])
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.leave (||)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.switch (|
                  M.get_var (| "base" |),
                  [
                    (
                      Some (Literal.number 1),
                      M.scope (
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["power"],
                            Some ([Literal.number 1])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.leave (||)
                        )) in
                        M.pure BlockUnit.Tt
                      )
                    );
                    (
                      Some (Literal.number 2),
                      M.scope (
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["_1"],
                            Some ([Literal.number 0])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["power"],
                            Some ([Literal.number 4])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.assign (|
                            ["_1"],
                            Some ([Literal.number 0])
                          |)
                        )) in
                        do! ltac:(M.monadic (
                          M.leave (||)
                        )) in
                        M.pure BlockUnit.Tt
                      )
                    )
                  ]
                |)
              )) in
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "or",
                    [
                      M.call_function (|
                        "and",
                        [
                          M.call_function (|
                            "lt",
                            [
                              M.get_var (| "base" |);
                              [Literal.number 11]
                            ]
                          |);
                          [Literal.number 1]
                        ]
                      |);
                      M.call_function (|
                        "and",
                        [
                          M.call_function (|
                            "lt",
                            [
                              M.get_var (| "base" |);
                              [Literal.number 307]
                            ]
                          |);
                          [Literal.number 1]
                        ]
                      |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.assign (|
                        ["power"],
                        Some (M.call_function (|
                          "exp",
                          [
                            M.get_var (| "base" |);
                            [Literal.number 2]
                          ]
                        |))
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.if_ (|
                        M.get_var (| "_1" |),
                        M.scope (
                          do! ltac:(M.monadic (
                            M.expr_stmt (|
                              M.call_function (|
                                "mstore",
                                [
                                  M.get_var (| "_1" |);
                                  M.call_function (|
                                    "shl",
                                    [
                                      [Literal.number 224];
                                      [Literal.number 0x4e487b71]
                                    ]
                                  |)
                                ]
                              |)
                            |)
                          )) in
                          do! ltac:(M.monadic (
                            M.expr_stmt (|
                              M.call_function (|
                                "mstore",
                                [
                                  [Literal.number 4];
                                  [Literal.number 0x11]
                                ]
                              |)
                            |)
                          )) in
                          do! ltac:(M.monadic (
                            M.expr_stmt (|
                              M.call_function (|
                                "revert",
                                [
                                  M.get_var (| "_1" |);
                                  [Literal.number 0x24]
                                ]
                              |)
                            |)
                          )) in
                          M.pure BlockUnit.Tt
                        )
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.leave (||)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.declare (|
                  ["exponent"],
                  Some ([Literal.number 2])
                |)
              )) in
              do! ltac:(M.monadic (
                M.declare (|
                  ["power_1"],
                  Some (M.get_var (| "_1" |))
                |)
              )) in
              do! ltac:(M.monadic (
                M.declare (|
                  ["base_1"],
                  Some (M.get_var (| "_1" |))
                |)
              )) in
              do! ltac:(M.monadic (
                M.assign (|
                  ["power_1"],
                  Some ([Literal.number 1])
                |)
              )) in
              do! ltac:(M.monadic (
                M.assign (|
                  ["base_1"],
                  Some (M.get_var (| "base" |))
                |)
              )) in
              do! ltac:(M.monadic (
                do!
                  M.scope (
                    M.pure BlockUnit.Tt
                  ) in
                ltac:(M.monadic (
                  M.for_ (|
                    ltac:(M.monadic (
                      M.call_function (|
                        "gt",
                        [
                          M.get_var (| "exponent" |);
                          [Literal.number 1]
                        ]
                      |)
                    )),
                    M.scope (
                      M.pure BlockUnit.Tt
                    ),
                    M.scope (
                      do! ltac:(M.monadic (
                        M.if_ (|
                          M.call_function (|
                            "gt",
                            [
                              M.get_var (| "base_1" |);
                              M.call_function (|
                                "div",
                                [
                                  M.call_function (|
                                    "not",
                                    [
                                      [Literal.number 0]
                                    ]
                                  |);
                                  M.get_var (| "base_1" |)
                                ]
                              |)
                            ]
                          |),
                          M.scope (
                            do! ltac:(M.monadic (
                              M.expr_stmt (|
                                M.call_function (|
                                  "mstore",
                                  [
                                    M.get_var (| "_1" |);
                                    M.call_function (|
                                      "shl",
                                      [
                                        [Literal.number 224];
                                        [Literal.number 0x4e487b71]
                                      ]
                                    |)
                                  ]
                                |)
                              |)
                            )) in
                            do! ltac:(M.monadic (
                              M.expr_stmt (|
                                M.call_function (|
                                  "mstore",
                                  [
                                    [Literal.number 4];
                                    [Literal.number 0x11]
                                  ]
                                |)
                              |)
                            )) in
                            do! ltac:(M.monadic (
                              M.expr_stmt (|
                                M.call_function (|
                                  "revert",
                                  [
                                    M.get_var (| "_1" |);
                                    [Literal.number 0x24]
                                  ]
                                |)
                              |)
                            )) in
                            M.pure BlockUnit.Tt
                          )
                        |)
                      )) in
                      do! ltac:(M.monadic (
                        M.if_ (|
                          M.call_function (|
                            "and",
                            [
                              M.get_var (| "exponent" |);
                              [Literal.number 1]
                            ]
                          |),
                          M.scope (
                            do! ltac:(M.monadic (
                              M.assign (|
                                ["power_1"],
                                Some (M.call_function (|
                                  "mul",
                                  [
                                    M.get_var (| "power_1" |);
                                    M.get_var (| "base_1" |)
                                  ]
                                |))
                              |)
                            )) in
                            M.pure BlockUnit.Tt
                          )
                        |)
                      )) in
                      do! ltac:(M.monadic (
                        M.assign (|
                          ["base_1"],
                          Some (M.call_function (|
                            "mul",
                            [
                              M.get_var (| "base_1" |);
                              M.get_var (| "base_1" |)
                            ]
                          |))
                        |)
                      )) in
                      do! ltac:(M.monadic (
                        M.assign (|
                          ["exponent"],
                          Some (M.call_function (|
                            "shr",
                            [
                              [Literal.number 1];
                              M.get_var (| "exponent" |)
                            ]
                          |))
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                ))
              )) in
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "gt",
                    [
                      M.get_var (| "power_1" |);
                      M.call_function (|
                        "div",
                        [
                          M.call_function (|
                            "not",
                            [
                              [Literal.number 0]
                            ]
                          |);
                          M.get_var (| "base_1" |)
                        ]
                      |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "mstore",
                          [
                            M.get_var (| "_1" |);
                            M.call_function (|
                              "shl",
                              [
                                [Literal.number 224];
                                [Literal.number 0x4e487b71]
                              ]
                            |)
                          ]
                        |)
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "mstore",
                          [
                            [Literal.number 4];
                            [Literal.number 0x11]
                          ]
                        |)
                      |)
                    )) in
                    do! ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call_function (|
                          "revert",
                          [
                            M.get_var (| "_1" |);
                            [Literal.number 0x24]
                          ]
                        |)
                      |)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.assign (|
                  ["power"],
                  Some (M.call_function (|
                    "mul",
                    [
                      M.get_var (| "power_1" |);
                      M.get_var (| "base_1" |)
                    ]
                  |))
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          )
        ];
      Code.body :=
        M.scope (
          do! ltac:(M.monadic (
            M.scope (
              do! ltac:(M.monadic (
                M.declare (|
                  ["_1"],
                  Some (M.call_function (|
                    "memoryguard",
                    [
                      [Literal.number 0x80]
                    ]
                  |))
                |)
              )) in
              do! ltac:(M.monadic (
                M.expr_stmt (|
                  M.call_function (|
                    "mstore",
                    [
                      [Literal.number 64];
                      M.get_var (| "_1" |)
                    ]
                  |)
                |)
              )) in
              do! ltac:(M.monadic (
                M.if_ (|
                  M.call_function (|
                    "iszero",
                    [
                      M.call_function (|
                        "lt",
                        [
                          M.call_function (|
                            "calldatasize",
                            []
                          |);
                          [Literal.number 4]
                        ]
                      |)
                    ]
                  |),
                  M.scope (
                    do! ltac:(M.monadic (
                      M.switch (|
                        M.call_function (|
                          "shr",
                          [
                            [Literal.number 224];
                            M.call_function (|
                              "calldataload",
                              [
                                [Literal.number 0]
                              ]
                            |)
                          ]
                        |),
                        [
                          (
                            Some (Literal.number 0x50f9b6cd),
                            M.scope (
                              do! ltac:(M.monadic (
                                M.if_ (|
                                  M.call_function (|
                                    "callvalue",
                                    []
                                  |),
                                  M.scope (
                                    do! ltac:(M.monadic (
                                      M.expr_stmt (|
                                        M.call_function (|
                                          "revert",
                                          [
                                            [Literal.number 0];
                                            [Literal.number 0]
                                          ]
                                        |)
                                      |)
                                    )) in
                                    M.pure BlockUnit.Tt
                                  )
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.if_ (|
                                  M.call_function (|
                                    "slt",
                                    [
                                      M.call_function (|
                                        "add",
                                        [
                                          M.call_function (|
                                            "calldatasize",
                                            []
                                          |);
                                          M.call_function (|
                                            "not",
                                            [
                                              [Literal.number 3]
                                            ]
                                          |)
                                        ]
                                      |);
                                      [Literal.number 0]
                                    ]
                                  |),
                                  M.scope (
                                    do! ltac:(M.monadic (
                                      M.expr_stmt (|
                                        M.call_function (|
                                          "revert",
                                          [
                                            [Literal.number 0];
                                            [Literal.number 0]
                                          ]
                                        |)
                                      |)
                                    )) in
                                    M.pure BlockUnit.Tt
                                  )
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "mstore",
                                    [
                                      M.get_var (| "_1" |);
                                      M.call_function (|
                                        "sload",
                                        [
                                          [Literal.number 0]
                                        ]
                                      |)
                                    ]
                                  |)
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "return",
                                    [
                                      M.get_var (| "_1" |);
                                      [Literal.number 32]
                                    ]
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          );
                          (
                            Some (Literal.number 0xb3de648b),
                            M.scope (
                              do! ltac:(M.monadic (
                                M.if_ (|
                                  M.call_function (|
                                    "callvalue",
                                    []
                                  |),
                                  M.scope (
                                    do! ltac:(M.monadic (
                                      M.expr_stmt (|
                                        M.call_function (|
                                          "revert",
                                          [
                                            [Literal.number 0];
                                            [Literal.number 0]
                                          ]
                                        |)
                                      |)
                                    )) in
                                    M.pure BlockUnit.Tt
                                  )
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.if_ (|
                                  M.call_function (|
                                    "slt",
                                    [
                                      M.call_function (|
                                        "add",
                                        [
                                          M.call_function (|
                                            "calldatasize",
                                            []
                                          |);
                                          M.call_function (|
                                            "not",
                                            [
                                              [Literal.number 3]
                                            ]
                                          |)
                                        ]
                                      |);
                                      [Literal.number 32]
                                    ]
                                  |),
                                  M.scope (
                                    do! ltac:(M.monadic (
                                      M.expr_stmt (|
                                        M.call_function (|
                                          "revert",
                                          [
                                            [Literal.number 0];
                                            [Literal.number 0]
                                          ]
                                        |)
                                      |)
                                    )) in
                                    M.pure BlockUnit.Tt
                                  )
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.declare (|
                                  ["value"],
                                  Some (M.call_function (|
                                    "calldataload",
                                    [
                                      [Literal.number 4]
                                    ]
                                  |))
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.declare (|
                                  ["_2"],
                                  Some (M.call_function (|
                                    "sload",
                                    [
                                      [Literal.number 0]
                                    ]
                                  |))
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.declare (|
                                  ["ret"],
                                  Some ([Literal.number 0])
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.if_ (|
                                  M.call_function (|
                                    "eq",
                                    [
                                      M.get_var (| "_2" |);
                                      M.call_function (|
                                        "not",
                                        [
                                          [Literal.number 0]
                                        ]
                                      |)
                                    ]
                                  |),
                                  M.scope (
                                    do! ltac:(M.monadic (
                                      M.expr_stmt (|
                                        M.call_function (|
                                          "mstore",
                                          [
                                            [Literal.number 0];
                                            M.call_function (|
                                              "shl",
                                              [
                                                [Literal.number 224];
                                                [Literal.number 0x4e487b71]
                                              ]
                                            |)
                                          ]
                                        |)
                                      |)
                                    )) in
                                    do! ltac:(M.monadic (
                                      M.expr_stmt (|
                                        M.call_function (|
                                          "mstore",
                                          [
                                            [Literal.number 4];
                                            [Literal.number 0x11]
                                          ]
                                        |)
                                      |)
                                    )) in
                                    do! ltac:(M.monadic (
                                      M.expr_stmt (|
                                        M.call_function (|
                                          "revert",
                                          [
                                            [Literal.number 0];
                                            [Literal.number 0x24]
                                          ]
                                        |)
                                      |)
                                    )) in
                                    M.pure BlockUnit.Tt
                                  )
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.assign (|
                                  ["ret"],
                                  Some (M.call_function (|
                                    "add",
                                    [
                                      M.get_var (| "_2" |);
                                      [Literal.number 1]
                                    ]
                                  |))
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "sstore",
                                    [
                                      [Literal.number 0];
                                      M.get_var (| "ret" |)
                                    ]
                                  |)
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.declare (|
                                  ["var_r"],
                                  Some ([Literal.number 0])
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.declare (|
                                  ["expr"],
                                  Some ([Literal.number 0])
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.switch (|
                                  M.call_function (|
                                    "iszero",
                                    [
                                      M.get_var (| "value" |)
                                    ]
                                  |),
                                  [
                                    (
                                      Some (Literal.number 0),
                                      M.scope (
                                        do! ltac:(M.monadic (
                                          M.declare (|
                                            ["diff"],
                                            Some (M.call_function (|
                                              "add",
                                              [
                                                M.get_var (| "value" |);
                                                M.call_function (|
                                                  "not",
                                                  [
                                                    [Literal.number 0]
                                                  ]
                                                |)
                                              ]
                                            |))
                                          |)
                                        )) in
                                        do! ltac:(M.monadic (
                                          M.if_ (|
                                            M.call_function (|
                                              "gt",
                                              [
                                                M.get_var (| "diff" |);
                                                M.get_var (| "value" |)
                                              ]
                                            |),
                                            M.scope (
                                              do! ltac:(M.monadic (
                                                M.expr_stmt (|
                                                  M.call_function (|
                                                    "mstore",
                                                    [
                                                      [Literal.number 0];
                                                      M.call_function (|
                                                        "shl",
                                                        [
                                                          [Literal.number 224];
                                                          [Literal.number 0x4e487b71]
                                                        ]
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              )) in
                                              do! ltac:(M.monadic (
                                                M.expr_stmt (|
                                                  M.call_function (|
                                                    "mstore",
                                                    [
                                                      [Literal.number 4];
                                                      [Literal.number 0x11]
                                                    ]
                                                  |)
                                                |)
                                              )) in
                                              do! ltac:(M.monadic (
                                                M.expr_stmt (|
                                                  M.call_function (|
                                                    "revert",
                                                    [
                                                      [Literal.number 0];
                                                      [Literal.number 0x24]
                                                    ]
                                                  |)
                                                |)
                                              )) in
                                              M.pure BlockUnit.Tt
                                            )
                                          |)
                                        )) in
                                        do! ltac:(M.monadic (
                                          M.assign (|
                                            ["expr"],
                                            Some (M.call_function (|
                                              "checked_exp_unsigned",
                                              [
                                                M.call_function (|
                                                  "modifier_mod1",
                                                  [
                                                    [Literal.number 0];
                                                    M.get_var (| "diff" |)
                                                  ]
                                                |)
                                              ]
                                            |))
                                          |)
                                        )) in
                                        M.pure BlockUnit.Tt
                                      )
                                    );
                                    (
                                      None,
                                      M.scope (
                                        do! ltac:(M.monadic (
                                          M.assign (|
                                            ["expr"],
                                            Some ([Literal.number 0x02])
                                          |)
                                        )) in
                                        M.pure BlockUnit.Tt
                                      )
                                    )
                                  ]
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.assign (|
                                  ["var_r"],
                                  Some (M.get_var (| "expr" |))
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.declare (|
                                  ["memPos"],
                                  Some (M.call_function (|
                                    "mload",
                                    [
                                      [Literal.number 64]
                                    ]
                                  |))
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "mstore",
                                    [
                                      M.get_var (| "memPos" |);
                                      M.get_var (| "expr" |)
                                    ]
                                  |)
                                |)
                              )) in
                              do! ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call_function (|
                                    "return",
                                    [
                                      M.get_var (| "memPos" |);
                                      [Literal.number 32]
                                    ]
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          )
                        ]
                      |)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do! ltac:(M.monadic (
                M.expr_stmt (|
                  M.call_function (|
                    "revert",
                    [
                      [Literal.number 0];
                      [Literal.number 0]
                    ]
                  |)
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          )) in
          M.pure BlockUnit.Tt
        );
    |}.
  End deployed.
End C.

Import Ltac2.

Definition codes : list Code.t :=
  ltac2:(
    let codes := Code.get_codes () in
    exact $codes
  ).
