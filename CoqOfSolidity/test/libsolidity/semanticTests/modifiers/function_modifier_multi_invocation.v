(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 9
src: 17:68:0
nodeType: ModifierDefinition
name: repeat
nameLocation: 26:6:0
documentation: 
visibility: internal
parameters: ParameterList.make [
    Definition twice : Value.t :=
      undefined.
  ]
virtual: 0
overrides: 
body: let _ :=
    if M.get_name (| "twice" |) then
      (* Beginning of a node! *)
id: 5
src: 66:1:0
nodeType: PlaceholderStatement

    else
      Value.Tuple [] in
  let _ :=
    (* Beginning of a node! *)
id: 7
src: 77:1:0
nodeType: PlaceholderStatement
 in
  Value.Tuple []


  Definition f (α : list Value.t) : M :=
    match α with
    | [twice] =>
      let _ :=
        M.assign (|
          "+=",
          M.get_name (| "r" |),
          Value.Integer 1
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
