(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition result_in_constructor : Value.t :=
    undefined.

  Definition x : Value.t :=
    undefined.

  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "x" |),
          M.get_name (| "double" |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "result_in_constructor" |),
          M.call (|
            M.get_name (| "use" |),
            [
              Value.Integer 2
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition double (α : list Value.t) : M :=
    match α with
    | [_arg] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "_ret" |),
          M.bin_op (|
            "*",
            M.get_name (| "_arg" |),
            Value.Integer 2
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition use (α : list Value.t) : M :=
    match α with
    | [_arg] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "x" |),
            [
              M.get_name (| "_arg" |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
