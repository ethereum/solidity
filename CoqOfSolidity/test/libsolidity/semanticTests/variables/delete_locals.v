(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition delLocal (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.define (|
          [ "v" ],
          Value.Integer 5
        |) in
      let _ :=
        M.define (|
          [ "w" ],
          Value.Integer 6
        |) in
      let _ :=
        M.define (|
          [ "x" ],
          Value.Integer 7
        |) in
      let _ :=
        M.un_op (|
          true,
          "delete",
          M.get_name (| "v" |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "res1" |),
          M.get_name (| "w" |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "res2" |),
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
