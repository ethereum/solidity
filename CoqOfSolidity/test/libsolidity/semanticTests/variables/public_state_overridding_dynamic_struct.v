(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Struct S *)

(* Contract *)
Module A.
  Definition test (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "v" |),
          Value.Integer 42
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "s" |),
          Value.String "test"
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.


(* Contract *)
Module X.
  Definition test : Value.t :=
    undefined.

  Definition set (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "test" |),
            "v"
          |),
          Value.Integer 2
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "test" |),
            "s"
          |),
          Value.String "statevar"
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End X.
