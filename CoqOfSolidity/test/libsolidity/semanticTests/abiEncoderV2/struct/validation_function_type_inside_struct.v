(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Contract *)
Module C.
  (* Struct S *)

  Definition f (α : list Value.t) : M :=
    match α with
    | [_] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "r" |),
          Value.Integer 1
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [_] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "r" |),
          Value.Integer 2
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition h (α : list Value.t) : M :=
    match α with
    | [s] =>
      let _ :=
        M.member_access (|
          M.get_name (| "s" |),
          "x"
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "r" |),
          Value.Integer 3
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
