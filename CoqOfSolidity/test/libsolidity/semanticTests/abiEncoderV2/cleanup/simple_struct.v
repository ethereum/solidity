(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Contract *)
Module C.
  (* Struct S *)

  Definition gg (α : list Value.t) : M :=
    match α with
    | [s] =>
      let _ :=
        M.member_access (|
          M.get_name (| "s" |),
          "a"
        |) in
      let _ :=
        M.member_access (|
          M.get_name (| "s" |),
          "b"
        |) in
      let _ :=
        M.return_ (|
          M.member_access (|
            M.get_name (| "msg" |),
            "data"
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [a, b] =>
      let _ :=
        M.define (|
          [ "s" ],
          M.call (|
            M.get_name (| "S" |),
            [
              Value.Integer 2,
              Value.Integer 0x02
            ]
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 43
src: 339:81:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 372:1:0declaration: 28isSlot: isOffset: alueSize: src: 408:1:0declaration: 30isSlot: isOffset: alueSize: src: 369:1:0declaration: 37isSlot: isOffset: alueSize: src: 398:1:0declaration: 37isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "this" |),
              "gg"
            |),
            [
              M.get_name (| "s" |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
