(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "abi" |),
            "encode"
          |),
          [
            M.get_name (| "a" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "abi" |),
            "encode"
          |),
          [
            M.get_name (| "a" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "abi" |),
            "encode"
          |),
          [
            M.get_name (| "a" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
