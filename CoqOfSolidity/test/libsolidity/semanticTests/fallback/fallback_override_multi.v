(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition  (α : list Value.t) : M :=
    match α with
    | [_input] =>
      let _ :=
        M.return_ (|
          M.get_name (| "_input" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.


(* Contract *)
Module B.
  Definition  (α : list Value.t) : M :=
    match α with
    | [_input] =>
      let _ :=
        M.return_ (|
          Value.String "xyz"
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End B.


(* Contract *)
Module C.
  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "success"; "retval" ],
          M.call (|
            M.member_access (|
              M.call (|
                Ty.path "address",
                [
                  M.get_name (| "this" |)
                ]
              |),
              "call"
            |),
            [
              Value.String "abc"
            ]
          |)
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.get_name (| "success" |),
            M.get_name (| "retval" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
