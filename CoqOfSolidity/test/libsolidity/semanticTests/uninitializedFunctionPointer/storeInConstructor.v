(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module InvalidTest.
  Definition storedFn : Value.t :=
    undefined.

  Definition flag : Value.t :=
    undefined.

  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "invalid" ],
          Value.Default
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "storedFn" |),
          M.get_name (| "invalid" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        if M.get_name (| "flag" |) then
          M.return_ (|
            Value.Integer 2
          |)
        else
          Value.Tuple [] in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "flag" |),
          Value.Bool true
        |) in
      let _ :=
        M.call (|
          M.get_name (| "storedFn" |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End InvalidTest.
