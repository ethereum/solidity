(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Axiom user_type_MyInt : Ty.path "MyInt" = Ty.path "int16".

Axiom user_type_MyBytes : Ty.path "MyBytes" = Ty.path "bytes2".

(* Contract *)
Module C.
  Definition a : Value.t :=
    M.call (|
      M.member_access (|
        M.get_name (| "MyInt" |),
        "wrap"
      |),
      [
        M.un_op (|
          true,
          "-",
          Value.Integer 2
        |)
      ]
    |).

  Definition b : Value.t :=
    M.call (|
      M.member_access (|
        M.get_name (| "MyBytes" |),
        "wrap"
      |),
      [
        Value.String "ab"
      ]
    |).

  Definition f : Value.t :=
    M.get_name (| "g" |).

  Definition direct (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.get_name (| "a" |),
            M.get_name (| "b" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition viaasm (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "_a" ],
          M.get_name (| "a" |)
        |) in
      let _ :=
        M.define (|
          [ "_b" ],
          M.get_name (| "b" |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 57
src: 415:28:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 431:2:0declaration: 49isSlot: isOffset: alueSize: src: 439:2:0declaration: 54isSlot: isOffset: alueSize: src: 426:1:0declaration: 43isSlot: isOffset: alueSize: src: 434:1:0declaration: 45isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 2
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
