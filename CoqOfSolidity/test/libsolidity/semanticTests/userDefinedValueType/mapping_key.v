(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Axiom user_type_MyInt : Ty.path "MyInt" = Ty.path "int".

(* Contract *)
Module C.
  Definition m : Value.t :=
    undefined.

  Definition set (α : list Value.t) : M :=
    match α with
    | [key, value] =>
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "m" |),
            Some (M.get_name (| "key" |))
          |),
          M.get_name (| "value" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition set_unwrapped (α : list Value.t) : M :=
    match α with
    | [key, value] =>
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "m" |),
            Some (M.call (|
              M.member_access (|
                M.get_name (| "MyInt" |),
                "wrap"
              |),
              [
                M.get_name (| "key" |)
              ]
            |))
          |),
          M.get_name (| "value" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
