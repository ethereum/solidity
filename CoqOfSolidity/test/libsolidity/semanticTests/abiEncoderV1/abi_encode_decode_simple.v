(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "arg" ],
          Value.String "abcdefg"
        |) in
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "abi" |),
              "decode"
            |),
            [
              M.call (|
                M.member_access (|
                  M.get_name (| "abi" |),
                  "encode"
                |),
                [
                  M.call (|
                    Ty.path "uint256",
                    [
                      Value.Integer 33
                    ]
                  |),
                  M.get_name (| "arg" |)
                ]
              |),
              Value.Tuple [
                Ty.path "uint256",
                Ty.path "bytes"
              ]
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
