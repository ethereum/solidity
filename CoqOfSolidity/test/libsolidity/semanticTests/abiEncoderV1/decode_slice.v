(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [a, b] =>
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            M.get_name (| "c" |),
            M.get_name (| "d" |)
          ],
          M.call (|
            M.member_access (|
              M.get_name (| "abi" |),
              "decode"
            |),
            [
              IndexRangeAccess M.member_access (|
                M.get_name (| "msg" |),
                "data"
              |) Value.Integer 4 
,
              Value.Tuple [
                Ty.path "uint256",
                Ty.path "uint256"
              ]
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "e" |),
          M.call (|
            M.member_access (|
              M.get_name (| "abi" |),
              "decode"
            |),
            [
              IndexRangeAccess M.member_access (|
                M.get_name (| "msg" |),
                "data"
              |) Value.Integer 4 M.bin_op (|
                "+",
                Value.Integer 4,
                Value.Integer 32
              |)
,
              Value.Tuple [
                Ty.path "uint256"
              ]
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "f" |),
          M.call (|
            M.member_access (|
              M.get_name (| "abi" |),
              "decode"
            |),
            [
              IndexRangeAccess M.member_access (|
                M.get_name (| "msg" |),
                "data"
              |) M.bin_op (|
                "+",
                Value.Integer 4,
                Value.Integer 32
              |) M.bin_op (|
                "+",
                M.bin_op (|
                  "+",
                  Value.Integer 4,
                  Value.Integer 32
                |),
                Value.Integer 32
              |)
,
              Value.Tuple [
                Ty.path "uint256"
              ]
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
