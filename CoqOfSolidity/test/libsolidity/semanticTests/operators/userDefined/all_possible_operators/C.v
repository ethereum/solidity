(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Module C.
  Definition code : Code.t := {|
    Code.name := "C_785";
    Code.hex_name := 0x435f373835000000000000000000000000000000000000000000000000000000;
    Code.code :=
      M.scope (
        do* ltac:(M.monadic (
          M.function (|
            "allocate_unbounded",
            [],
            ["memPtr"],
            M.scope (
              do* ltac:(M.monadic (
                M.assign (|
                  ["memPtr"],
                  Some (M.call (|
                    "mload",
                    [
                      [Literal.number 64]
                    ]
                  |))
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          |)
        )) in
        do* ltac:(M.monadic (
          M.function (|
            "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
            [],
            [],
            M.scope (
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert",
                    [
                      [Literal.number 0];
                      [Literal.number 0]
                    ]
                  |)
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          |)
        )) in
        do* ltac:(M.monadic (
          M.scope (
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "mstore",
                  [
                    [Literal.number 64];
                    M.call (|
                      "memoryguard",
                      [
                        [Literal.number 0x80]
                      ]
                    |)
                  ]
                |)
              |)
            )) in
            do* ltac:(M.monadic (
              M.if_ (|
                M.call (|
                  "callvalue",
                  []
                |),
                M.scope (
                  do* ltac:(M.monadic (
                    M.expr_stmt (|
                      M.call (|
                        "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                        []
                      |)
                    |)
                  )) in
                  M.pure BlockUnit.Tt
                )
              |)
            )) in
            do* ltac:(M.monadic (
              M.declare (|
                ["_1"],
                Some (M.call (|
                  "allocate_unbounded",
                  []
                |))
              |)
            )) in
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "codecopy",
                  [
                    M.get_var (| "_1" |);
                    M.call (|
                      "dataoffset",
                      [
                        [Literal.string 0x435f3738355f6465706c6f796564000000000000000000000000000000000000]
                      ]
                    |);
                    M.call (|
                      "datasize",
                      [
                        [Literal.string 0x435f3738355f6465706c6f796564000000000000000000000000000000000000]
                      ]
                    |)
                  ]
                |)
              |)
            )) in
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "return",
                  [
                    M.get_var (| "_1" |);
                    M.call (|
                      "datasize",
                      [
                        [Literal.string 0x435f3738355f6465706c6f796564000000000000000000000000000000000000]
                      ]
                    |)
                  ]
                |)
              |)
            )) in
            M.pure BlockUnit.Tt
          )
        )) in
        M.pure BlockUnit.Tt
      );
  |}.

  Module deployed.
    Definition code : Code.t := {|
      Code.name := "C_785_deployed";
      Code.hex_name := 0x435f3738355f6465706c6f796564000000000000000000000000000000000000;
      Code.code :=
        M.scope (
          do* ltac:(M.monadic (
            M.function (|
              "shift_right_unsigned",
              ["value"],
              ["newValue"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["newValue"],
                    Some (M.call (|
                      "shr",
                      [
                        [Literal.number 224];
                        M.get_var (| "value" |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "allocate_unbounded",
              [],
              ["memPtr"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["memPtr"],
                    Some (M.call (|
                      "mload",
                      [
                        [Literal.number 64]
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "abi_decode",
              ["headStart"; "dataEnd"],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "slt",
                      [
                        M.call (|
                          "sub",
                          [
                            M.get_var (| "dataEnd" |);
                            M.get_var (| "headStart" |)
                          ]
                        |);
                        [Literal.number 0]
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "abi_encode_tuple",
              ["headStart"],
              ["tail"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["tail"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "headStart" |);
                        [Literal.number 0]
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "external_fun_testArithmetic",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "callvalue",
                      []
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_decode",
                      [
                        [Literal.number 4];
                        M.call (|
                          "calldatasize",
                          []
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "fun_testArithmetic",
                      []
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memPos"],
                    Some (M.call (|
                      "allocate_unbounded",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memEnd"],
                    Some (M.call (|
                      "abi_encode_tuple",
                      [
                        M.get_var (| "memPos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "return",
                      [
                        M.get_var (| "memPos" |);
                        M.call (|
                          "sub",
                          [
                            M.get_var (| "memEnd" |);
                            M.get_var (| "memPos" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "external_fun_testComparison",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "callvalue",
                      []
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_decode",
                      [
                        [Literal.number 4];
                        M.call (|
                          "calldatasize",
                          []
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "fun_testComparison",
                      []
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memPos"],
                    Some (M.call (|
                      "allocate_unbounded",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memEnd"],
                    Some (M.call (|
                      "abi_encode_tuple",
                      [
                        M.get_var (| "memPos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "return",
                      [
                        M.get_var (| "memPos" |);
                        M.call (|
                          "sub",
                          [
                            M.get_var (| "memEnd" |);
                            M.get_var (| "memPos" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "external_fun_testBitwise",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "callvalue",
                      []
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_decode",
                      [
                        [Literal.number 4];
                        M.call (|
                          "calldatasize",
                          []
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "fun_testBitwise",
                      []
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memPos"],
                    Some (M.call (|
                      "allocate_unbounded",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memEnd"],
                    Some (M.call (|
                      "abi_encode_tuple",
                      [
                        M.get_var (| "memPos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "return",
                      [
                        M.get_var (| "memPos" |);
                        M.call (|
                          "sub",
                          [
                            M.get_var (| "memEnd" |);
                            M.get_var (| "memPos" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_t_rational_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_int8",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.call (|
                      "signextend",
                      [
                        [Literal.number 0];
                        M.get_var (| "value" |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "identity",
              ["value"],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_1_by_1_to_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_t_rational_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "constant_ONE",
              [],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_rational_1_by_1_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "expr_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_t_rational_by_1",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_2_by_1_to_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_t_rational_by_1",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "constant_TWO",
              [],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some ([Literal.number 0x02])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_rational_2_by_1_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "expr_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_int8_to_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_int8",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_3_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_3_by_1_to_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_3_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "panic_error_0x01",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0];
                        M.call (|
                          "shl",
                          [
                            [Literal.number 224];
                            [Literal.number 0x4e487b71]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 4];
                        [Literal.number 0x01]
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0x24]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "assert_helper",
              ["condition"],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "iszero",
                      [
                        M.get_var (| "condition" |)
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "panic_error_0x01",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_by_1",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_by_to_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_by_1",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "constant_ZERO",
              [],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_rational_by_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "expr_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "constant_THREE",
              [],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some ([Literal.number 0x03])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_rational_3_by_1_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "expr_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_minus_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_minus_by_to_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_minus_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_t_rational_by_to_t_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "constant_SIX",
              [],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some ([Literal.number 0x06])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_t_rational_by_to_t_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "expr_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_testArithmetic",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.call (|
                      "fun_add",
                      [
                        M.get_var (| "expr" |);
                        M.get_var (| "expr_1" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some ([Literal.number 0x03])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_3" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_3_by_1_to_int8",
                          [
                            M.get_var (| "expr_4" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_5" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_6"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_7"],
                    Some (M.call (|
                      "constant_ZERO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_8"],
                    Some (M.call (|
                      "fun_add",
                      [
                        M.get_var (| "expr_6" |);
                        M.get_var (| "expr_7" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_9"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_8" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_10"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_11"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_9" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_10" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_11" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_12"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_13"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_14"],
                    Some (M.call (|
                      "fun_sub",
                      [
                        M.get_var (| "expr_12" |);
                        M.get_var (| "expr_13" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_15"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_14" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_16"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_17"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_15" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_16" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_17" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_18"],
                    Some (M.call (|
                      "constant_THREE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_19"],
                    Some (M.call (|
                      "constant_THREE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_20"],
                    Some (M.call (|
                      "fun_sub",
                      [
                        M.get_var (| "expr_18" |);
                        M.get_var (| "expr_19" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_21"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_20" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_22"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_23"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_21" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_by_to_int8",
                          [
                            M.get_var (| "expr_22" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_23" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_24"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_25"],
                    Some (M.call (|
                      "fun_unsub",
                      [
                        M.get_var (| "expr_24" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_26"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_25" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_27"],
                    Some (M.call (|
                      "not",
                      [
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_28"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_26" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_minus_by_to_int8",
                          [
                            M.get_var (| "expr_27" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_28" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_29"],
                    Some (M.call (|
                      "constant_ZERO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_30"],
                    Some (M.call (|
                      "fun_unsub",
                      [
                        M.get_var (| "expr_29" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_31"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_30" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_32"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_33"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_31" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_by_to_int8",
                          [
                            M.get_var (| "expr_32" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_33" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_34"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_35"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_36"],
                    Some (M.call (|
                      "fun_mul",
                      [
                        M.get_var (| "expr_34" |);
                        M.get_var (| "expr_35" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_37"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_36" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_38"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_39"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_37" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_38" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_39" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_40"],
                    Some (M.call (|
                      "constant_THREE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_41"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_42"],
                    Some (M.call (|
                      "fun_mul",
                      [
                        M.get_var (| "expr_40" |);
                        M.get_var (| "expr_41" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_43"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_42" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_44"],
                    Some ([Literal.number 0x06])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_45"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_43" |)
                          ]
                        |);
                        M.call (|
                          "convert_t_rational_by_to_t_int8",
                          [
                            M.get_var (| "expr_44" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_45" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_46"],
                    Some (M.call (|
                      "constant_SIX",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_47"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_48"],
                    Some (M.call (|
                      "fun_div",
                      [
                        M.get_var (| "expr_46" |);
                        M.get_var (| "expr_47" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_49"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_48" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_50"],
                    Some ([Literal.number 0x03])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_51"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_49" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_3_by_1_to_int8",
                          [
                            M.get_var (| "expr_50" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_51" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_52"],
                    Some (M.call (|
                      "constant_THREE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_53"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_54"],
                    Some (M.call (|
                      "fun_div",
                      [
                        M.get_var (| "expr_52" |);
                        M.get_var (| "expr_53" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_55"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_54" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_56"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_57"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_55" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_56" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_57" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_58"],
                    Some (M.call (|
                      "constant_SIX",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_59"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_60"],
                    Some (M.call (|
                      "fun_mod",
                      [
                        M.get_var (| "expr_58" |);
                        M.get_var (| "expr_59" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_61"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_60" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_62"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_63"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_61" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_by_to_int8",
                          [
                            M.get_var (| "expr_62" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_63" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_64"],
                    Some (M.call (|
                      "constant_THREE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_65"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_66"],
                    Some (M.call (|
                      "fun_mod",
                      [
                        M.get_var (| "expr_64" |);
                        M.get_var (| "expr_65" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_67"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_66" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_68"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_69"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_67" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_68" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_69" |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_bool",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.call (|
                      "iszero",
                      [
                        M.call (|
                          "iszero",
                          [
                            M.get_var (| "value" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_testComparison",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.call (|
                      "fun_eq",
                      [
                        M.get_var (| "expr" |);
                        M.get_var (| "expr_1" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.get_var (| "expr_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_3" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_4" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_5" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_6"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_7"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_8"],
                    Some (M.call (|
                      "fun_eq",
                      [
                        M.get_var (| "expr_6" |);
                        M.get_var (| "expr_7" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_9"],
                    Some (M.get_var (| "expr_8" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_10"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_11"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_9" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_10" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_11" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_12"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_13"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_14"],
                    Some (M.call (|
                      "fun_noteq",
                      [
                        M.get_var (| "expr_12" |);
                        M.get_var (| "expr_13" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_15"],
                    Some (M.get_var (| "expr_14" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_16"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_17"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_15" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_16" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_17" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_18"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_19"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_20"],
                    Some (M.call (|
                      "fun_noteq",
                      [
                        M.get_var (| "expr_18" |);
                        M.get_var (| "expr_19" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_21"],
                    Some (M.get_var (| "expr_20" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_22"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_23"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_21" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_22" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_23" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_24"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_25"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_26"],
                    Some (M.call (|
                      "fun_lt",
                      [
                        M.get_var (| "expr_24" |);
                        M.get_var (| "expr_25" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_27"],
                    Some (M.get_var (| "expr_26" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_28"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_29"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_27" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_28" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_29" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_30"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_31"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_32"],
                    Some (M.call (|
                      "fun_lt",
                      [
                        M.get_var (| "expr_30" |);
                        M.get_var (| "expr_31" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_33"],
                    Some (M.get_var (| "expr_32" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_34"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_35"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_33" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_34" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_35" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_36"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_37"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_38"],
                    Some (M.call (|
                      "fun_leq",
                      [
                        M.get_var (| "expr_36" |);
                        M.get_var (| "expr_37" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_39"],
                    Some (M.get_var (| "expr_38" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_40"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_41"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_39" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_40" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_41" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_42"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_43"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_44"],
                    Some (M.call (|
                      "fun_leq",
                      [
                        M.get_var (| "expr_42" |);
                        M.get_var (| "expr_43" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_45"],
                    Some (M.get_var (| "expr_44" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_46"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_47"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_45" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_46" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_47" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_48"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_49"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_50"],
                    Some (M.call (|
                      "fun_gt",
                      [
                        M.get_var (| "expr_48" |);
                        M.get_var (| "expr_49" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_51"],
                    Some (M.get_var (| "expr_50" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_52"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_53"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_51" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_52" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_53" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_54"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_55"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_56"],
                    Some (M.call (|
                      "fun_gt",
                      [
                        M.get_var (| "expr_54" |);
                        M.get_var (| "expr_55" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_57"],
                    Some (M.get_var (| "expr_56" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_58"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_59"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_57" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_58" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_59" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_60"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_61"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_62"],
                    Some (M.call (|
                      "fun_geq",
                      [
                        M.get_var (| "expr_60" |);
                        M.get_var (| "expr_61" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_63"],
                    Some (M.get_var (| "expr_62" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_64"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_65"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_63" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_64" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_65" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_66"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_67"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_68"],
                    Some (M.call (|
                      "fun_geq",
                      [
                        M.get_var (| "expr_66" |);
                        M.get_var (| "expr_67" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_69"],
                    Some (M.get_var (| "expr_68" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_70"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_71"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_69" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_bool",
                          [
                            M.get_var (| "expr_70" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_71" |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_t_rational_minus_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_minus_1_by_1_to_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_t_rational_minus_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_minus_by_1",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_t_rational_minus_by_to_t_int8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_minus_by_1",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_testBitwise",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.call (|
                      "fun_bitor",
                      [
                        M.get_var (| "expr" |);
                        M.get_var (| "expr_1" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some ([Literal.number 0x03])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_3" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_3_by_1_to_int8",
                          [
                            M.get_var (| "expr_4" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_5" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_6"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_7"],
                    Some (M.call (|
                      "constant_ZERO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_8"],
                    Some (M.call (|
                      "fun_bitor",
                      [
                        M.get_var (| "expr_6" |);
                        M.get_var (| "expr_7" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_9"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_8" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_10"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_11"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_9" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_10" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_11" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_12"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_13"],
                    Some (M.call (|
                      "constant_THREE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_14"],
                    Some (M.call (|
                      "fun_bitand",
                      [
                        M.get_var (| "expr_12" |);
                        M.get_var (| "expr_13" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_15"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_14" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_16"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_17"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_15" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_16" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_17" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_18"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_19"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_20"],
                    Some (M.call (|
                      "fun_bitand",
                      [
                        M.get_var (| "expr_18" |);
                        M.get_var (| "expr_19" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_21"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_20" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_22"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_23"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_21" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_22" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_23" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_24"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_25"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_26"],
                    Some (M.call (|
                      "fun_bitxor",
                      [
                        M.get_var (| "expr_24" |);
                        M.get_var (| "expr_25" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_27"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_26" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_28"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_29"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_27" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_by_to_int8",
                          [
                            M.get_var (| "expr_28" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_29" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_30"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_31"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_32"],
                    Some (M.call (|
                      "fun_bitxor",
                      [
                        M.get_var (| "expr_30" |);
                        M.get_var (| "expr_31" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_33"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_32" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_34"],
                    Some ([Literal.number 0x03])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_35"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_33" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_3_by_1_to_int8",
                          [
                            M.get_var (| "expr_34" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_35" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_36"],
                    Some (M.call (|
                      "constant_ZERO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_37"],
                    Some (M.call (|
                      "fun_bitnot",
                      [
                        M.get_var (| "expr_36" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_38"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_37" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_39"],
                    Some (M.call (|
                      "not",
                      [
                        [Literal.number 0]
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_40"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_38" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_minus_1_by_1_to_int8",
                          [
                            M.get_var (| "expr_39" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_40" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_41"],
                    Some (M.call (|
                      "constant_ONE",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_42"],
                    Some (M.call (|
                      "fun_bitnot",
                      [
                        M.get_var (| "expr_41" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_43"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_42" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_44"],
                    Some (M.call (|
                      "not",
                      [
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_45"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_43" |)
                          ]
                        |);
                        M.call (|
                          "convert_rational_minus_by_to_int8",
                          [
                            M.get_var (| "expr_44" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_45" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_46"],
                    Some (M.call (|
                      "constant_TWO",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_47"],
                    Some (M.call (|
                      "fun_bitnot",
                      [
                        M.get_var (| "expr_46" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_48"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_47" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_49"],
                    Some (M.call (|
                      "not",
                      [
                        [Literal.number 2]
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_50"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_48" |)
                          ]
                        |);
                        M.call (|
                          "convert_t_rational_minus_by_to_t_int8",
                          [
                            M.get_var (| "expr_49" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "assert_helper",
                      [
                        M.get_var (| "expr_50" |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "zero_value_for_split_userDefinedValueType_Int",
              [],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some ([Literal.number 0])
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "panic_error_0x11",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0];
                        M.call (|
                          "shl",
                          [
                            [Literal.number 224];
                            [Literal.number 0x4e487b71]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 4];
                        [Literal.number 0x11]
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0x24]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "checked_add_int8",
              ["x"; "y"],
              ["sum"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["x"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "x" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["y"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["sum"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "x" |);
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "or",
                      [
                        M.call (|
                          "sgt",
                          [
                            M.get_var (| "sum" |);
                            [Literal.number 0x7f]
                          ]
                        |);
                        M.call (|
                          "slt",
                          [
                            M.get_var (| "sum" |);
                            M.call (|
                              "not",
                              [
                                [Literal.number 127]
                              ]
                            |)
                          ]
                        |)
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "panic_error_0x11",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_add",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "checked_add_int8",
                      [
                        M.get_var (| "expr_1" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "checked_sub_int8",
              ["x"; "y"],
              ["diff"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["x"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "x" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["y"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["diff"],
                    Some (M.call (|
                      "sub",
                      [
                        M.get_var (| "x" |);
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "or",
                      [
                        M.call (|
                          "slt",
                          [
                            M.get_var (| "diff" |);
                            M.call (|
                              "not",
                              [
                                [Literal.number 127]
                              ]
                            |)
                          ]
                        |);
                        M.call (|
                          "sgt",
                          [
                            M.get_var (| "diff" |);
                            [Literal.number 0x7f]
                          ]
                        |)
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "panic_error_0x11",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_sub",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_t_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_t_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "checked_sub_int8",
                      [
                        M.get_var (| "expr_1" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "negate_int8",
              ["value"],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["value"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "value" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "eq",
                      [
                        M.get_var (| "value" |);
                        M.call (|
                          "not",
                          [
                            [Literal.number 127]
                          ]
                        |)
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "panic_error_0x11",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.call (|
                      "sub",
                      [
                        [Literal.number 0];
                        M.get_var (| "value" |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_unsub",
              ["var_x"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.call (|
                      "negate_int8",
                      [
                        M.get_var (| "expr_1" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_3" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "checked_mul_int8",
              ["x"; "y"],
              ["product"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["x"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "x" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["y"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["product_raw"],
                    Some (M.call (|
                      "mul",
                      [
                        M.get_var (| "x" |);
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["product"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "product_raw" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "iszero",
                      [
                        M.call (|
                          "eq",
                          [
                            M.get_var (| "product" |);
                            M.get_var (| "product_raw" |)
                          ]
                        |)
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "panic_error_0x11",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_mul",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "checked_mul_int8",
                      [
                        M.get_var (| "expr_1" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "panic_error_0x12",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0];
                        M.call (|
                          "shl",
                          [
                            [Literal.number 224];
                            [Literal.number 0x4e487b71]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 4];
                        [Literal.number 0x12]
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0x24]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "checked_div_int8",
              ["x"; "y"],
              ["r"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["x"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "x" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["y"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "iszero",
                      [
                        M.get_var (| "y" |)
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "panic_error_0x12",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "and",
                      [
                        M.call (|
                          "eq",
                          [
                            M.get_var (| "x" |);
                            M.call (|
                              "not",
                              [
                                [Literal.number 127]
                              ]
                            |)
                          ]
                        |);
                        M.call (|
                          "eq",
                          [
                            M.get_var (| "y" |);
                            M.call (|
                              "sub",
                              [
                                [Literal.number 0];
                                [Literal.number 1]
                              ]
                            |)
                          ]
                        |)
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "panic_error_0x11",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["r"],
                    Some (M.call (|
                      "sdiv",
                      [
                        M.get_var (| "x" |);
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_div",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "checked_div_int8",
                      [
                        M.get_var (| "expr_1" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "mod_int8",
              ["x"; "y"],
              ["r"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["x"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "x" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["y"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "iszero",
                      [
                        M.get_var (| "y" |)
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "panic_error_0x12",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["r"],
                    Some (M.call (|
                      "smod",
                      [
                        M.get_var (| "x" |);
                        M.get_var (| "y" |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_mod",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "mod_int8",
                      [
                        M.get_var (| "expr_1" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "zero_value_for_split_bool",
              [],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some ([Literal.number 0])
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_eq",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_t_bool"],
                    Some (M.call (|
                      "zero_value_for_split_bool",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_t_bool" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "eq",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_1" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_3" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_noteq",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_bool"],
                    Some (M.call (|
                      "zero_value_for_split_bool",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_bool" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "iszero",
                      [
                        M.call (|
                          "eq",
                          [
                            M.call (|
                              "cleanup_int8",
                              [
                                M.get_var (| "expr_1" |)
                              ]
                            |);
                            M.call (|
                              "cleanup_int8",
                              [
                                M.get_var (| "expr_3" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_lt",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_bool"],
                    Some (M.call (|
                      "zero_value_for_split_bool",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_bool" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "slt",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_1" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_3" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_leq",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_bool"],
                    Some (M.call (|
                      "zero_value_for_split_bool",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_bool" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "iszero",
                      [
                        M.call (|
                          "sgt",
                          [
                            M.call (|
                              "cleanup_int8",
                              [
                                M.get_var (| "expr_1" |)
                              ]
                            |);
                            M.call (|
                              "cleanup_int8",
                              [
                                M.get_var (| "expr_3" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_gt",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_bool"],
                    Some (M.call (|
                      "zero_value_for_split_bool",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_bool" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "sgt",
                      [
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_1" |)
                          ]
                        |);
                        M.call (|
                          "cleanup_int8",
                          [
                            M.get_var (| "expr_3" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_geq",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_bool"],
                    Some (M.call (|
                      "zero_value_for_split_bool",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_bool" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "iszero",
                      [
                        M.call (|
                          "slt",
                          [
                            M.call (|
                              "cleanup_int8",
                              [
                                M.get_var (| "expr_1" |)
                              ]
                            |);
                            M.call (|
                              "cleanup_int8",
                              [
                                M.get_var (| "expr_3" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_bitor",
              ["var_x"; "var_y"],
              ["var_"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "or",
                      [
                        M.get_var (| "expr_1" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_bitand",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "and",
                      [
                        M.get_var (| "expr_1" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_bitxor",
              ["var_x"; "var_y"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.get_var (| "var_y" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.get_var (| "_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some (M.call (|
                      "xor",
                      [
                        M.get_var (| "expr_1" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_bitnot",
              ["var_x"],
              ["var"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_userDefinedValueType_Int"],
                    Some (M.call (|
                      "zero_value_for_split_userDefinedValueType_Int",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_userDefinedValueType_Int" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.get_var (| "var_x" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some (M.get_var (| "_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some (M.call (|
                      "cleanup_int8",
                      [
                        M.call (|
                          "not",
                          [
                            M.get_var (| "expr_1" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.call (|
                      "convert_int8_to_int8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_3" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.scope (
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "mstore",
                    [
                      [Literal.number 64];
                      M.call (|
                        "memoryguard",
                        [
                          [Literal.number 0x80]
                        ]
                      |)
                    ]
                  |)
                |)
              )) in
              do* ltac:(M.monadic (
                M.if_ (|
                  M.call (|
                    "iszero",
                    [
                      M.call (|
                        "lt",
                        [
                          M.call (|
                            "calldatasize",
                            []
                          |);
                          [Literal.number 4]
                        ]
                      |)
                    ]
                  |),
                  M.scope (
                    do* ltac:(M.monadic (
                      M.declare (|
                        ["selector"],
                        Some (M.call (|
                          "shift_right_unsigned",
                          [
                            M.call (|
                              "calldataload",
                              [
                                [Literal.number 0]
                              ]
                            |)
                          ]
                        |))
                      |)
                    )) in
                    do* ltac:(M.monadic (
                      M.switch (|
                        M.get_var (| "selector" |),
                        [
                          (
                            Some (Literal.number 0x0f74a039),
                            M.scope (
                              do* ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call (|
                                    "external_fun_testArithmetic",
                                    []
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          );
                          (
                            Some (Literal.number 0x2135b4d9),
                            M.scope (
                              do* ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call (|
                                    "external_fun_testComparison",
                                    []
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          );
                          (
                            Some (Literal.number 0xcf9b9c17),
                            M.scope (
                              do* ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call (|
                                    "external_fun_testBitwise",
                                    []
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          );
                          (
                            None,
                            M.scope (
                              M.pure BlockUnit.Tt
                            )
                          )
                        ]
                      |)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
                    []
                  |)
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          )) in
          M.pure BlockUnit.Tt
        );
    |}.

    Definition data : string :=
      "a26469706673582212209f35b9326948e0d3011a39563aa8ad244a9a7df9fbc878dc882302c1de17047764736f6c634300081b0033".
  End deployed.
End C.

Definition codes : list (U256.t * M.t BlockUnit.t) :=
  ltac2:(
    let codes := Code.get_codes () in
    exact $codes
  ).
