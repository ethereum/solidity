(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition value1 : Value.t :=
    undefined.

  Definition value2 : Value.t :=
    undefined.

  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [x, y] =>
      let _ :=
        M.define (|
          [ "value3" ],
          M.get_name (| "y" |)
        |) in
      let _ :=
        M.assign (|
          "+=",
          M.get_name (| "value1" |),
          M.get_name (| "x" |)
        |) in
      let _ :=
        M.assign (|
          "*=",
          M.get_name (| "value3" |),
          M.get_name (| "x" |)
        |) in
      let _ :=
        M.assign (|
          "*=",
          M.get_name (| "value2" |),
          M.bin_op (|
            "+",
            M.get_name (| "value3" |),
            M.get_name (| "value1" |)
          |)
        |) in
      let _ :=
        M.return_ (|
          M.assign (|
            "+=",
            M.get_name (| "value2" |),
            Value.Integer 7
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
