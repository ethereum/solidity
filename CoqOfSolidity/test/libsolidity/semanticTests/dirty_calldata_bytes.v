(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [b] =>
      let _ :=
        M.define (|
          [ "a" ],
          M.index_access (|
            M.get_name (| "b" |),
            Some (Value.Integer 3)
          |)
        |) in
      let _ :=
        M.define (|
          [ "r" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 16
src: 127:39:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 155:1:0declaration: 8isSlot: isOffset: alueSize: src: 150:1:0declaration: 14isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "correct" |),
          M.bin_op (|
            "==",
            M.get_name (| "r" |),
            Value.Tuple [
              M.bin_op (|
                "<<",
                Value.Integer 0x64,
                Value.Integer 248
              |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
