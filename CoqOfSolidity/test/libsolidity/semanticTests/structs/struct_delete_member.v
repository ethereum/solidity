(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  (* Struct testStruct *)

  Definition data1 : Value.t :=
    undefined.

  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "data1" |),
            "m_value"
          |),
          Value.Integer 2
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition deleteMember (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          M.get_name (| "data1" |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "x" |),
            "m_value"
          |),
          Value.Integer 4
        |) in
      let _ :=
        M.un_op (|
          true,
          "delete",
          M.member_access (|
            M.get_name (| "x" |),
            "m_value"
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "ret_value" |),
          M.member_access (|
            M.get_name (| "data1" |),
            "m_value"
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
