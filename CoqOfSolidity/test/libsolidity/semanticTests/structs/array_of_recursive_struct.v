(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module Test.
  (* Struct RecursiveStruct *)

  Definition func (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.define (|
          [ "val" ],
          Value.Array [
            M.call (|
              M.get_name (| "RecursiveStruct" |),
              [
                M.call (|
                  NewExpression Ty.array (Ty.path "RecursiveStruct") None
,
                  [
                    Value.Integer 42
                  ]
                |)
              ]
            |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "assert" |),
          [
            M.bin_op (|
              "==",
              M.member_access (|
                M.member_access (|
                  M.index_access (|
                    M.get_name (| "val" |),
                    Some (Value.Integer 0)
                  |),
                  "vals"
                |),
                "length"
              |),
              Value.Integer 42
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Test.
