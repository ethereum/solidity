(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  (* Struct testStruct *)

  Definition campaigns : Value.t :=
    undefined.

  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.index_access (|
              M.get_name (| "campaigns" |),
              Some (Value.Integer 0)
            |),
            "m_value"
          |),
          Value.Integer 2
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition deleteIt (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.un_op (|
          true,
          "delete",
          M.index_access (|
            M.get_name (| "campaigns" |),
            Some (Value.Integer 0)
          |)
        |) in
      let _ :=
        M.return_ (|
          M.member_access (|
            M.index_access (|
              M.get_name (| "campaigns" |),
              Some (Value.Integer 0)
            |),
            "m_value"
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
