(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Contract *)
Module C.
  (* Struct S *)

  Definition f (α : list Value.t) : M :=
    match α with
    | [p1, c] =>
      let _ :=
        M.define (|
          [ "m" ],
          Value.Default
        |) in
      let _ :=
        M.define (|
          [ "p2" ],
          Value.Default
        |) in
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            M.get_name (| "p2" |),
            M.get_name (| "m" |)
          ],
          Value.Tuple [
            M.get_name (| "p1" |),
            M.get_name (| "c" |)
          ]
        |) in
      let _ :=
        M.un_op (|
          false,
          "++",
          M.member_access (|
            M.get_name (| "m" |),
            "p1"
          |)
        |) in
      let _ :=
        M.un_op (|
          false,
          "++",
          M.index_access (|
            M.index_access (|
              M.member_access (|
                M.get_name (| "m" |),
                "a"
              |),
              Some (Value.Integer 0)
            |),
            Some (Value.Integer 1)
          |)
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.get_name (| "p2" |),
            M.member_access (|
              M.get_name (| "m" |),
              "p1"
            |),
            M.index_access (|
              M.index_access (|
                M.member_access (|
                  M.get_name (| "m" |),
                  "a"
                |),
                Some (Value.Integer 0)
              |),
              Some (Value.Integer 0)
            |),
            M.index_access (|
              M.index_access (|
                M.member_access (|
                  M.get_name (| "m" |),
                  "a"
                |),
                Some (Value.Integer 1)
              |),
              Some (Value.Integer 1)
            |),
            M.member_access (|
              M.get_name (| "m" |),
              "p2"
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
