(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition x : Value.t :=
    undefined.

  Definition mutex : Value.t :=
    undefined.

  Definition t (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        if M.bin_op (|
          ">",
          M.get_name (| "mutex" |),
          Value.Integer 0
        |) then
          let _ :=
            (* Beginning of a node! *)
id: 16
src: 158:85:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: 
evmVersion: cancun
 in
          Value.Tuple []
        else
          Value.Tuple [] in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "mutex" |),
          Value.Integer 1
        |) in
      let _ :=
        M.call (|
          M.get_name (| "x" |),
          []
        |) in
      let _ :=
        M.return_ (|
          Value.Integer 2
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
