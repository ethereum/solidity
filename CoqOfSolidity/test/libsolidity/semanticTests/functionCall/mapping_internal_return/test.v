(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Module test.
  Definition code : Code.t := {|
    Code.name := "test_129";
    Code.hex_name := 0x746573745f313239000000000000000000000000000000000000000000000000;
    Code.code :=
      M.scope (
        do* ltac:(M.monadic (
          M.function (|
            "allocate_unbounded",
            [],
            ["memPtr"],
            M.scope (
              do* ltac:(M.monadic (
                M.assign (|
                  ["memPtr"],
                  Some (M.call (|
                    "mload",
                    [
                      [Literal.number 64]
                    ]
                  |))
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          |)
        )) in
        do* ltac:(M.monadic (
          M.function (|
            "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
            [],
            [],
            M.scope (
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert",
                    [
                      [Literal.number 0];
                      [Literal.number 0]
                    ]
                  |)
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          |)
        )) in
        do* ltac:(M.monadic (
          M.scope (
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "mstore",
                  [
                    [Literal.number 64];
                    M.call (|
                      "memoryguard",
                      [
                        [Literal.number 0x80]
                      ]
                    |)
                  ]
                |)
              |)
            )) in
            do* ltac:(M.monadic (
              M.if_ (|
                M.call (|
                  "callvalue",
                  []
                |),
                M.scope (
                  do* ltac:(M.monadic (
                    M.expr_stmt (|
                      M.call (|
                        "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                        []
                      |)
                    |)
                  )) in
                  M.pure BlockUnit.Tt
                )
              |)
            )) in
            do* ltac:(M.monadic (
              M.declare (|
                ["_1"],
                Some (M.call (|
                  "allocate_unbounded",
                  []
                |))
              |)
            )) in
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "codecopy",
                  [
                    M.get_var (| "_1" |);
                    M.call (|
                      "dataoffset",
                      [
                        [Literal.string 0x746573745f3132395f6465706c6f796564000000000000000000000000000000]
                      ]
                    |);
                    M.call (|
                      "datasize",
                      [
                        [Literal.string 0x746573745f3132395f6465706c6f796564000000000000000000000000000000]
                      ]
                    |)
                  ]
                |)
              |)
            )) in
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "return",
                  [
                    M.get_var (| "_1" |);
                    M.call (|
                      "datasize",
                      [
                        [Literal.string 0x746573745f3132395f6465706c6f796564000000000000000000000000000000]
                      ]
                    |)
                  ]
                |)
              |)
            )) in
            M.pure BlockUnit.Tt
          )
        )) in
        M.pure BlockUnit.Tt
      );
  |}.

  Module deployed.
    Definition code : Code.t := {|
      Code.name := "test_129_deployed";
      Code.hex_name := 0x746573745f3132395f6465706c6f796564000000000000000000000000000000;
      Code.code :=
        M.scope (
          do* ltac:(M.monadic (
            M.function (|
              "shift_right_unsigned",
              ["value"],
              ["newValue"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["newValue"],
                    Some (M.call (|
                      "shr",
                      [
                        [Literal.number 224];
                        M.get_var (| "value" |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "allocate_unbounded",
              [],
              ["memPtr"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["memPtr"],
                    Some (M.call (|
                      "mload",
                      [
                        [Literal.number 64]
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "abi_decode",
              ["headStart"; "dataEnd"],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "slt",
                      [
                        M.call (|
                          "sub",
                          [
                            M.get_var (| "dataEnd" |);
                            M.get_var (| "headStart" |)
                          ]
                        |);
                        [Literal.number 0]
                      ]
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_uint8",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.call (|
                      "and",
                      [
                        M.get_var (| "value" |);
                        [Literal.number 0xff]
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "abi_encode_uint8",
              ["value"; "pos"],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        M.get_var (| "pos" |);
                        M.call (|
                          "cleanup_uint8",
                          [
                            M.get_var (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "abi_encode_uint8_uint8_uint8_uint8_uint8_uint8",
              ["headStart"; "value0"; "value1"; "value2"; "value3"; "value4"; "value5"],
              ["tail"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["tail"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "headStart" |);
                        [Literal.number 192]
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_encode_uint8",
                      [
                        M.get_var (| "value0" |);
                        M.call (|
                          "add",
                          [
                            M.get_var (| "headStart" |);
                            [Literal.number 0]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_encode_uint8",
                      [
                        M.get_var (| "value1" |);
                        M.call (|
                          "add",
                          [
                            M.get_var (| "headStart" |);
                            [Literal.number 32]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_encode_uint8",
                      [
                        M.get_var (| "value2" |);
                        M.call (|
                          "add",
                          [
                            M.get_var (| "headStart" |);
                            [Literal.number 64]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_encode_uint8",
                      [
                        M.get_var (| "value3" |);
                        M.call (|
                          "add",
                          [
                            M.get_var (| "headStart" |);
                            [Literal.number 96]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_encode_uint8",
                      [
                        M.get_var (| "value4" |);
                        M.call (|
                          "add",
                          [
                            M.get_var (| "headStart" |);
                            [Literal.number 128]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_encode_uint8",
                      [
                        M.get_var (| "value5" |);
                        M.call (|
                          "add",
                          [
                            M.get_var (| "headStart" |);
                            [Literal.number 160]
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "external_fun_h",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "callvalue",
                      []
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_decode",
                      [
                        [Literal.number 4];
                        M.call (|
                          "calldatasize",
                          []
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["ret"; "ret_1"; "ret_2"; "ret_3"; "ret_4"; "ret_5"],
                    Some (M.call (|
                      "fun_h",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memPos"],
                    Some (M.call (|
                      "allocate_unbounded",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memEnd"],
                    Some (M.call (|
                      "abi_encode_uint8_uint8_uint8_uint8_uint8_uint8",
                      [
                        M.get_var (| "memPos" |);
                        M.get_var (| "ret" |);
                        M.get_var (| "ret_1" |);
                        M.get_var (| "ret_2" |);
                        M.get_var (| "ret_3" |);
                        M.get_var (| "ret_4" |);
                        M.get_var (| "ret_5" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "return",
                      [
                        M.get_var (| "memPos" |);
                        M.call (|
                          "sub",
                          [
                            M.get_var (| "memEnd" |);
                            M.get_var (| "memPos" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "external_fun_g",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.if_ (|
                    M.call (|
                      "callvalue",
                      []
                    |),
                    M.scope (
                      do* ltac:(M.monadic (
                        M.expr_stmt (|
                          M.call (|
                            "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                            []
                          |)
                        |)
                      )) in
                      M.pure BlockUnit.Tt
                    )
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "abi_decode",
                      [
                        [Literal.number 4];
                        M.call (|
                          "calldatasize",
                          []
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["ret"; "ret_1"; "ret_2"; "ret_3"; "ret_4"; "ret_5"],
                    Some (M.call (|
                      "fun_g",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memPos"],
                    Some (M.call (|
                      "allocate_unbounded",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["memEnd"],
                    Some (M.call (|
                      "abi_encode_uint8_uint8_uint8_uint8_uint8_uint8",
                      [
                        M.get_var (| "memPos" |);
                        M.get_var (| "ret" |);
                        M.get_var (| "ret_1" |);
                        M.get_var (| "ret_2" |);
                        M.get_var (| "ret_3" |);
                        M.get_var (| "ret_4" |);
                        M.get_var (| "ret_5" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "return",
                      [
                        M.get_var (| "memPos" |);
                        M.call (|
                          "sub",
                          [
                            M.get_var (| "memEnd" |);
                            M.get_var (| "memPos" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
              [],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "revert",
                      [
                        [Literal.number 0];
                        [Literal.number 0]
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "zero_value_for_split_uint8",
              [],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some ([Literal.number 0])
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_17_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "identity",
              ["value"],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_17_by_1_to_uint8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_uint8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_17_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_2_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_2_by_1_to_uint8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_uint8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_2_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "mapping_index_access_t_mapping_t_uint8_t_uint8_of_t_rational_by",
              ["slot"; "key"],
              ["dataSlot"],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0];
                        M.call (|
                          "convert_rational_2_by_1_to_uint8",
                          [
                            M.get_var (| "key" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0x20];
                        M.get_var (| "slot" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["dataSlot"],
                    Some (M.call (|
                      "keccak256",
                      [
                        [Literal.number 0];
                        [Literal.number 0x40]
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "shift_left",
              ["value"],
              ["newValue"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["newValue"],
                    Some (M.call (|
                      "shl",
                      [
                        [Literal.number 0];
                        M.get_var (| "value" |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "update_byte_slice_shift",
              ["value"; "toInsert"],
              ["result"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["mask"],
                    Some ([Literal.number 255])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["toInsert"],
                    Some (M.call (|
                      "shift_left",
                      [
                        M.get_var (| "toInsert" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["value"],
                    Some (M.call (|
                      "and",
                      [
                        M.get_var (| "value" |);
                        M.call (|
                          "not",
                          [
                            M.get_var (| "mask" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["result"],
                    Some (M.call (|
                      "or",
                      [
                        M.get_var (| "value" |);
                        M.call (|
                          "and",
                          [
                            M.get_var (| "toInsert" |);
                            M.get_var (| "mask" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_uint8_to_uint8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_uint8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_uint8",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "prepare_store_uint8",
              ["value"],
              ["ret"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["ret"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "update_storage_value_offsett_uint8_to_uint8",
              ["slot"; "value"],
              [],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["convertedValue"],
                    Some (M.call (|
                      "convert_uint8_to_uint8",
                      [
                        M.get_var (| "value" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "sstore",
                      [
                        M.get_var (| "slot" |);
                        M.call (|
                          "update_byte_slice_shift",
                          [
                            M.call (|
                              "sload",
                              [
                                M.get_var (| "slot" |)
                              ]
                            |);
                            M.call (|
                              "prepare_store_uint8",
                              [
                                M.get_var (| "convertedValue" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_t_rational_by_1",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_0_by_1_to_uint8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_uint8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_t_rational_by_1",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "mapping_index_access_mapping_uint8__uint8__of_rational_by",
              ["slot"; "key"],
              ["dataSlot"],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0];
                        M.call (|
                          "convert_rational_0_by_1_to_uint8",
                          [
                            M.get_var (| "key" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0x20];
                        M.get_var (| "slot" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["dataSlot"],
                    Some (M.call (|
                      "keccak256",
                      [
                        [Literal.number 0];
                        [Literal.number 0x40]
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "shift_right_0_unsigned",
              ["value"],
              ["newValue"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["newValue"],
                    Some (M.call (|
                      "shr",
                      [
                        [Literal.number 0];
                        M.get_var (| "value" |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_from_storage_uint8",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.call (|
                      "and",
                      [
                        M.get_var (| "value" |);
                        [Literal.number 0xff]
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "extract_from_storage_value_offsett_uint8",
              ["slot_value"],
              ["value"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["value"],
                    Some (M.call (|
                      "cleanup_from_storage_uint8",
                      [
                        M.call (|
                          "shift_right_0_unsigned",
                          [
                            M.get_var (| "slot_value" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "read_from_storage_split_offset_uint8",
              ["slot"],
              ["value"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["value"],
                    Some (M.call (|
                      "extract_from_storage_value_offsett_uint8",
                      [
                        M.call (|
                          "sload",
                          [
                            M.get_var (| "slot" |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_t_rational_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_t_rational_by_to_t_uint8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_uint8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_t_rational_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "mapping_index_access_mapping_uint8_uint8_of_rational_by",
              ["slot"; "key"],
              ["dataSlot"],
              M.scope (
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0];
                        M.call (|
                          "convert_t_rational_by_to_t_uint8",
                          [
                            M.get_var (| "key" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        [Literal.number 0x20];
                        M.get_var (| "slot" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["dataSlot"],
                    Some (M.call (|
                      "keccak256",
                      [
                        [Literal.number 0];
                        [Literal.number 0x40]
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_h",
              [],
              ["var"; "var_"; "var_1"; "var_2"; "var_3"; "var_4"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_uint8" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_1"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_"],
                    Some (M.get_var (| "zero_uint8_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_2"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_1"],
                    Some (M.get_var (| "zero_uint8_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_3"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_2"],
                    Some (M.get_var (| "zero_uint8_3" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_4"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_3"],
                    Some (M.get_var (| "zero_uint8_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_5"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_4"],
                    Some (M.get_var (| "zero_uint8_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_99_slot"],
                    Some (M.call (|
                      "fun_f",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["var_m_slot"],
                    Some (M.get_var (| "expr_99_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some ([Literal.number 0x11])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.call (|
                      "convert_rational_17_by_1_to_uint8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_8_slot"],
                    Some (M.get_var (| "var_m_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_101_slot"],
                    Some (M.get_var (| "_8_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some ([Literal.number 0x02])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.call (|
                      "mapping_index_access_t_mapping_t_uint8_t_uint8_of_t_rational_by",
                      [
                        M.get_var (| "expr_101_slot" |);
                        M.get_var (| "expr_1" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "update_storage_value_offsett_uint8_to_uint8",
                      [
                        M.get_var (| "_2" |);
                        M.get_var (| "_1" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_10_slot"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_107_slot"],
                    Some (M.get_var (| "_10_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_3"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8__uint8__of_rational_by",
                      [
                        M.get_var (| "expr_107_slot" |);
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_4"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.get_var (| "_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_component"],
                    Some (M.get_var (| "expr_3" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_13_slot"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_110_slot"],
                    Some (M.get_var (| "_13_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_5"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8_uint8_of_rational_by",
                      [
                        M.get_var (| "expr_110_slot" |);
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_6"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_5" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.get_var (| "_6" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_125_component"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_16_slot"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_113_slot"],
                    Some (M.get_var (| "_16_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_6"],
                    Some ([Literal.number 0x02])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_7"],
                    Some (M.call (|
                      "mapping_index_access_t_mapping_t_uint8_t_uint8_of_t_rational_by",
                      [
                        M.get_var (| "expr_113_slot" |);
                        M.get_var (| "expr_6" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_8"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_7" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_7"],
                    Some (M.get_var (| "_8" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_125_component_1"],
                    Some (M.get_var (| "expr_7" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_19_slot"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_116_slot"],
                    Some (M.get_var (| "_19_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_8"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_9"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8__uint8__of_rational_by",
                      [
                        M.get_var (| "expr_116_slot" |);
                        M.get_var (| "expr_8" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_10"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_9" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_9"],
                    Some (M.get_var (| "_10" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_125_component_2"],
                    Some (M.get_var (| "expr_9" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_slot"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_119_slot"],
                    Some (M.get_var (| "_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_10"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_11"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8_uint8_of_rational_by",
                      [
                        M.get_var (| "expr_119_slot" |);
                        M.get_var (| "expr_10" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_12"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_11" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_11"],
                    Some (M.get_var (| "_12" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_125_component_3"],
                    Some (M.get_var (| "expr_11" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_25_slot"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_122_slot"],
                    Some (M.get_var (| "_25_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_12"],
                    Some ([Literal.number 0x02])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_13"],
                    Some (M.call (|
                      "mapping_index_access_t_mapping_t_uint8_t_uint8_of_t_rational_by",
                      [
                        M.get_var (| "expr_122_slot" |);
                        M.get_var (| "expr_12" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_14"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_13" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_13"],
                    Some (M.get_var (| "_14" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_125_component_4"],
                    Some (M.get_var (| "expr_13" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_component" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_"],
                    Some (M.get_var (| "expr_125_component" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_1"],
                    Some (M.get_var (| "expr_125_component_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_2"],
                    Some (M.get_var (| "expr_125_component_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_3"],
                    Some (M.get_var (| "expr_125_component_3" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_4"],
                    Some (M.get_var (| "expr_125_component_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_21_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_21_by_1_to_uint8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_uint8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_21_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_g",
              [],
              ["var"; "var_1"; "var_2"; "var_3"; "var_4"; "var_5"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "zero_uint8" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_t_uint8"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_1"],
                    Some (M.get_var (| "zero_t_uint8" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_1"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_2"],
                    Some (M.get_var (| "zero_uint8_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_2"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_3"],
                    Some (M.get_var (| "zero_uint8_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_3"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_4"],
                    Some (M.get_var (| "zero_uint8_3" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["zero_uint8_4"],
                    Some (M.call (|
                      "zero_value_for_split_uint8",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_5"],
                    Some (M.get_var (| "zero_uint8_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some ([Literal.number 0x15])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.call (|
                      "convert_rational_21_by_1_to_uint8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_52_slot"],
                    Some (M.call (|
                      "fun_f",
                      []
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some ([Literal.number 0x02])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.call (|
                      "mapping_index_access_t_mapping_t_uint8_t_uint8_of_t_rational_by",
                      [
                        M.get_var (| "expr_52_slot" |);
                        M.get_var (| "expr_1" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "update_storage_value_offsett_uint8_to_uint8",
                      [
                        M.get_var (| "_2" |);
                        M.get_var (| "_1" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_36_slot"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_58_slot"],
                    Some (M.get_var (| "_36_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_3"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8__uint8__of_rational_by",
                      [
                        M.get_var (| "expr_58_slot" |);
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_4"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some (M.get_var (| "_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_component"],
                    Some (M.get_var (| "expr_3" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_39_slot"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_61_slot"],
                    Some (M.get_var (| "_39_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_4"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_5"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8_uint8_of_rational_by",
                      [
                        M.get_var (| "expr_61_slot" |);
                        M.get_var (| "expr_4" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_6"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_5" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_5"],
                    Some (M.get_var (| "_6" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_component_1"],
                    Some (M.get_var (| "expr_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_42_slot"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_slot"],
                    Some (M.get_var (| "_42_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_6"],
                    Some ([Literal.number 0x02])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_7"],
                    Some (M.call (|
                      "mapping_index_access_t_mapping_t_uint8_t_uint8_of_t_rational_by",
                      [
                        M.get_var (| "expr_slot" |);
                        M.get_var (| "expr_6" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_8"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_7" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_7"],
                    Some (M.get_var (| "_8" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_component_2"],
                    Some (M.get_var (| "expr_7" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_45_slot"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_67_slot"],
                    Some (M.get_var (| "_45_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_8"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_9"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8__uint8__of_rational_by",
                      [
                        M.get_var (| "expr_67_slot" |);
                        M.get_var (| "expr_8" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_10"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_9" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_9"],
                    Some (M.get_var (| "_10" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_component_3"],
                    Some (M.get_var (| "expr_9" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_48_slot"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_70_slot"],
                    Some (M.get_var (| "_48_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_10"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_11"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8_uint8_of_rational_by",
                      [
                        M.get_var (| "expr_70_slot" |);
                        M.get_var (| "expr_10" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_12"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_11" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_11"],
                    Some (M.get_var (| "_12" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_component_4"],
                    Some (M.get_var (| "expr_11" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_51_slot"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_73_slot"],
                    Some (M.get_var (| "_51_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_12"],
                    Some ([Literal.number 0x02])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_13"],
                    Some (M.call (|
                      "mapping_index_access_t_mapping_t_uint8_t_uint8_of_t_rational_by",
                      [
                        M.get_var (| "expr_73_slot" |);
                        M.get_var (| "expr_12" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_14"],
                    Some (M.call (|
                      "read_from_storage_split_offset_uint8",
                      [
                        M.get_var (| "_13" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_13"],
                    Some (M.get_var (| "_14" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_component_5"],
                    Some (M.get_var (| "expr_13" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var"],
                    Some (M.get_var (| "expr_component" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_1"],
                    Some (M.get_var (| "expr_component_1" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_2"],
                    Some (M.get_var (| "expr_component_2" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_3"],
                    Some (M.get_var (| "expr_component_3" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_4"],
                    Some (M.get_var (| "expr_component_4" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_5"],
                    Some (M.get_var (| "expr_component_5" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.leave (||)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_by",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_by_to_uint8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_uint8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_by",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "cleanup_rational_by_1",
              ["value"],
              ["cleaned"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["cleaned"],
                    Some (M.get_var (| "value" |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "convert_rational_84_by_1_to_uint8",
              ["value"],
              ["converted"],
              M.scope (
                do* ltac:(M.monadic (
                  M.assign (|
                    ["converted"],
                    Some (M.call (|
                      "cleanup_uint8",
                      [
                        M.call (|
                          "identity",
                          [
                            M.call (|
                              "cleanup_rational_by_1",
                              [
                                M.get_var (| "value" |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |))
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.function (|
              "fun_f",
              [],
              ["var_r_slot"],
              M.scope (
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_54_slot"],
                    Some ([Literal.number 0x00])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_16_slot"],
                    Some (M.get_var (| "_54_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_r_slot"],
                    Some (M.get_var (| "expr_16_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr"],
                    Some ([Literal.number 0x2a])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_1"],
                    Some (M.call (|
                      "convert_rational_by_to_uint8",
                      [
                        M.get_var (| "expr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_56_slot"],
                    Some (M.get_var (| "var_r_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_19_slot"],
                    Some (M.get_var (| "_56_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_1"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_2"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8_uint8_of_rational_by",
                      [
                        M.get_var (| "expr_19_slot" |);
                        M.get_var (| "expr_1" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "update_storage_value_offsett_uint8_to_uint8",
                      [
                        M.get_var (| "_2" |);
                        M.get_var (| "_1" |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_58_slot"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_26_slot"],
                    Some (M.get_var (| "_58_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["var_r_slot"],
                    Some (M.get_var (| "expr_26_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_2"],
                    Some ([Literal.number 0x54])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_3"],
                    Some (M.call (|
                      "convert_rational_84_by_1_to_uint8",
                      [
                        M.get_var (| "expr_2" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_60_slot"],
                    Some (M.get_var (| "var_r_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_29_slot"],
                    Some (M.get_var (| "_60_slot" |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["expr_3"],
                    Some ([Literal.number 0x01])
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["_4"],
                    Some (M.call (|
                      "mapping_index_access_mapping_uint8_uint8_of_rational_by",
                      [
                        M.get_var (| "expr_29_slot" |);
                        M.get_var (| "expr_3" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "update_storage_value_offsett_uint8_to_uint8",
                      [
                        M.get_var (| "_4" |);
                        M.get_var (| "_3" |)
                      ]
                    |)
                  |)
                )) in
                M.pure BlockUnit.Tt
              )
            |)
          )) in
          do* ltac:(M.monadic (
            M.scope (
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "mstore",
                    [
                      [Literal.number 64];
                      M.call (|
                        "memoryguard",
                        [
                          [Literal.number 0x80]
                        ]
                      |)
                    ]
                  |)
                |)
              )) in
              do* ltac:(M.monadic (
                M.if_ (|
                  M.call (|
                    "iszero",
                    [
                      M.call (|
                        "lt",
                        [
                          M.call (|
                            "calldatasize",
                            []
                          |);
                          [Literal.number 4]
                        ]
                      |)
                    ]
                  |),
                  M.scope (
                    do* ltac:(M.monadic (
                      M.declare (|
                        ["selector"],
                        Some (M.call (|
                          "shift_right_unsigned",
                          [
                            M.call (|
                              "calldataload",
                              [
                                [Literal.number 0]
                              ]
                            |)
                          ]
                        |))
                      |)
                    )) in
                    do* ltac:(M.monadic (
                      M.switch (|
                        M.get_var (| "selector" |),
                        [
                          (
                            Some (Literal.number 0xb8c9d365),
                            M.scope (
                              do* ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call (|
                                    "external_fun_h",
                                    []
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          );
                          (
                            Some (Literal.number 0xe2179b8e),
                            M.scope (
                              do* ltac:(M.monadic (
                                M.expr_stmt (|
                                  M.call (|
                                    "external_fun_g",
                                    []
                                  |)
                                |)
                              )) in
                              M.pure BlockUnit.Tt
                            )
                          );
                          (
                            None,
                            M.scope (
                              M.pure BlockUnit.Tt
                            )
                          )
                        ]
                      |)
                    )) in
                    M.pure BlockUnit.Tt
                  )
                |)
              )) in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
                    []
                  |)
                |)
              )) in
              M.pure BlockUnit.Tt
            )
          )) in
          M.pure BlockUnit.Tt
        );
    |}.

    Definition data : string :=
      "a2646970667358221220f94d4eb2e7029d54cdaa83fd71d048b8c5422c23bf4cf6772a8ca3fbc2c2e4ac64736f6c634300081b0033".
  End deployed.
End test.

Definition codes : list (U256.t * M.t BlockUnit.t) :=
  ltac2:(
    let codes := Code.get_codes () in
    exact $codes
  ).
