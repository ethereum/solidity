(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition data : Value.t :=
    undefined.

  Definition name : Value.t :=
    undefined.

  Definition a_hash : Value.t :=
    undefined.

  Definition an_address : Value.t :=
    undefined.

  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "data" |),
          Value.Integer 8
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "name" |),
          Value.String "Celina"
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "a_hash" |),
          M.call (|
            M.get_name (| "keccak256" |),
            [
              Value.String "{"
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "an_address" |),
          M.call (|
            Ty.path "address",
            [
              Value.Integer 0x1337
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "super_secret_data" |),
          Value.Integer 42
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition super_secret_data : Value.t :=
    undefined.
End test.
