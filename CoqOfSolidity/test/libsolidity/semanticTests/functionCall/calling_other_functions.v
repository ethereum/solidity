(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module collatz.
  Definition run (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.while (|
          WhileKind.While,
          M.bin_op (|
            ">",
            Value.Tuple [
              M.assign (|
                "=",
                M.get_name (| "y" |),
                M.get_name (| "x" |)
              |)
            ],
            Value.Integer 1
          |),
          let _ :=
            if M.bin_op (|
              "==",
              M.bin_op (|
                "%",
                M.get_name (| "x" |),
                Value.Integer 2
              |),
              Value.Integer 0
            |) then
              M.assign (|
                "=",
                M.get_name (| "x" |),
                M.call (|
                  M.get_name (| "evenStep" |),
                  [
                    M.get_name (| "x" |)
                  ]
                |)
              |)
            else
              M.assign (|
                "=",
                M.get_name (| "x" |),
                M.call (|
                  M.get_name (| "oddStep" |),
                  [
                    M.get_name (| "x" |)
                  ]
                |)
              |) in
          Value.Tuple []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition evenStep (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "/",
            M.get_name (| "x" |),
            Value.Integer 2
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition oddStep (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "+",
            M.bin_op (|
              "*",
              Value.Integer 3,
              M.get_name (| "x" |)
            |),
            Value.Integer 1
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End collatz.
