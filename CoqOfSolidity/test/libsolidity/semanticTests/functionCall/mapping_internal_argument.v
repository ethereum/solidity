(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition a : Value.t :=
    undefined.

  Definition b : Value.t :=
    undefined.

  Definition set_internal (α : list Value.t) : M :=
    match α with
    | [m, key, value] =>
      let _ :=
        M.define (|
          [ "oldValue" ],
          M.index_access (|
            M.get_name (| "m" |),
            Some (M.get_name (| "key" |))
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "m" |),
            Some (M.get_name (| "key" |))
          |),
          M.get_name (| "value" |)
        |) in
      let _ :=
        M.return_ (|
          M.get_name (| "oldValue" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition set (α : list Value.t) : M :=
    match α with
    | [key, value_a, value_b] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "old_a" |),
          M.call (|
            M.get_name (| "set_internal" |),
            [
              M.get_name (| "a" |),
              M.get_name (| "key" |),
              M.get_name (| "value_a" |)
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "old_b" |),
          M.call (|
            M.get_name (| "set_internal" |),
            [
              M.get_name (| "b" |),
              M.get_name (| "key" |),
              M.get_name (| "value_b" |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition get (α : list Value.t) : M :=
    match α with
    | [key] =>
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.index_access (|
              M.get_name (| "a" |),
              Some (M.get_name (| "key" |))
            |),
            M.index_access (|
              M.get_name (| "b" |),
              Some (M.get_name (| "key" |))
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
