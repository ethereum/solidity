(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          M.bin_op (|
            "**",
            M.un_op (|
              true,
              "-",
              Value.Integer 2
            |),
            Value.Integer 255
          |)
        |) in
      let _ :=
        let _ :=
          M.call (|
            M.get_name (| "assert" |),
            [
              M.bin_op (|
                "==",
                M.un_op (|
                  true,
                  "-",
                  M.get_name (| "x" |)
                |),
                M.get_name (| "x" |)
              |)
            ]
          |) in
        Value.Tuple [] in
      let _ :=
        M.return_ (|
          Value.Bool true
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
