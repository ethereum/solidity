(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module D.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 7
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End D.


(* Contract *)
Module C.
  Definition diff (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          M.member_access (|
            M.call (|
              M.get_name (| "type" |),
              [
                M.get_name (| "D" |)
              ]
            |),
            "creationCode"
          |)
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          M.member_access (|
            M.call (|
              M.get_name (| "type" |),
              [
                M.get_name (| "D" |)
              ]
            |),
            "runtimeCode"
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 28
src: 266:66:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 313:1:0declaration: 15isSlot: isOffset: alueSize: src: 310:1:0declaration: 22isSlot: isOffset: alueSize: src: 289:9:0declaration: 12isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
