(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  (* Struct S *)

  Definition x : Value.t :=
    undefined.

  Definition y : Value.t :=
    undefined.

  Definition set (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "x" |),
            "a"
          |),
          Value.Integer 1
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "x" |),
            "b"
          |),
          Value.Integer 2
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "y" |),
            "a"
          |),
          Value.Integer 3
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "y" |),
            "b"
          |),
          Value.Integer 4
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition swap (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            M.get_name (| "x" |),
            M.get_name (| "y" |)
          ],
          Value.Tuple [
            M.get_name (| "y" |),
            M.get_name (| "x" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
