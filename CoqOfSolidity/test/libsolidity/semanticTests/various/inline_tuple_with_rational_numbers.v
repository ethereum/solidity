(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "foo3" ],
          Value.Array [
            M.call (|
              Ty.path "int8",
              [
                Value.Integer 1
              ]
            |),
            M.un_op (|
              true,
              "-",
              Value.Integer 1
            |),
            Value.Integer 0,
            Value.Integer 0,
            Value.Integer 0
          ]
        |) in
      let _ :=
        M.return_ (|
          M.index_access (|
            M.get_name (| "foo3" |),
            Some (Value.Integer 0)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
