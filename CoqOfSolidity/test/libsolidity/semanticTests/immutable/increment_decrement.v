(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition x : Value.t :=
    Value.Integer 1.

  Definition y : Value.t :=
    Value.Integer 3.

  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.un_op (|
          false,
          "--",
          M.get_name (| "x" |)
        |) in
      let _ :=
        M.un_op (|
          true,
          "--",
          M.get_name (| "x" |)
        |) in
      let _ :=
        M.un_op (|
          false,
          "++",
          M.get_name (| "y" |)
        |) in
      let _ :=
        M.un_op (|
          true,
          "++",
          M.get_name (| "y" |)
        |) in
      let _ :=
        M.un_op (|
          true,
          "--",
          M.get_name (| "y" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.get_name (| "x" |),
            M.get_name (| "y" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
