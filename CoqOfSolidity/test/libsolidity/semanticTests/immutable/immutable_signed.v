(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition a : Value.t :=
    M.un_op (|
      true,
      "-",
      Value.Integer 2
    |).

  Definition b : Value.t :=
    Value.String "ab".

  Definition f : Value.t :=
    M.get_name (| "g" |).

  Definition viaasm (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "_a" ],
          M.get_name (| "a" |)
        |) in
      let _ :=
        M.define (|
          [ "_b" ],
          M.get_name (| "b" |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 29
src: 248:28:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 264:2:0declaration: 22isSlot: isOffset: alueSize: src: 272:2:0declaration: 26isSlot: isOffset: alueSize: src: 259:1:0declaration: 17isSlot: isOffset: alueSize: src: 267:1:0declaration: 19isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 2
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
