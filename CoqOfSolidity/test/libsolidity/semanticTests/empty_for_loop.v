(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "ret" |),
          Value.Integer 1
        |) in
      let _ :=
        M.for_ (|
          Value.Tuple [],
          Value.Tuple [],
          Value.Tuple [],
          let _ :=
            M.assign (|
              "+=",
              M.get_name (| "ret" |),
              Value.Integer 1
            |) in
          let _ :=
            if M.bin_op (|
              ">=",
              M.get_name (| "ret" |),
              Value.Integer 10
            |) then
              M.break (||)
            else
              Value.Tuple [] in
          Value.Tuple []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
