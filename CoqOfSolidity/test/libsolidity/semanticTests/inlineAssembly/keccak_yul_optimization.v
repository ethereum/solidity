(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          M.member_access (|
            M.call (|
              M.get_name (| "type" |),
              [
                Ty.path "uint"
              ]
            |),
            "max"
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 13
src: 99:161:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 224:3:0declaration: 3isSlot: isOffset: alueSize: src: 135:1:0declaration: 6isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          M.member_access (|
            M.call (|
              M.get_name (| "type" |),
              [
                Ty.path "uint"
              ]
            |),
            "max"
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 28
src: 354:435:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 739:3:0declaration: 18isSlot: isOffset: alueSize: src: 390:1:0declaration: 21isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
