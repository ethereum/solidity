(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Contract *)
Module C.
  (* Struct S *)

  (* Struct S2 *)

  Definition f (α : list Value.t) : M :=
    match α with
    | [s, s2] =>
      let _ :=
        (* Beginning of a node! *)
id: 22
src: 186:36:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 200:1:0declaration: 12isSlot: isOffset: alueSize: src: 205:2:0declaration: 15isSlot: isOffset: alueSize: src: 211:2:0declaration: 15isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "r" |),
          M.member_access (|
            M.get_name (| "s" |),
            "x"
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "r2" |),
          M.member_access (|
            M.get_name (| "s2" |),
            "x"
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
