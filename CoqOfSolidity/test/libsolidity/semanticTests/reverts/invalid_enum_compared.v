(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Enum X *)

  Definition test_eq (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "garbled" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 12
src: 106:45:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 129:7:0declaration: 10isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.return_ (|
          M.bin_op (|
            "==",
            M.get_name (| "garbled" |),
            M.get_name (| "garbled" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition test_eq_ok (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "garbled" ],
          M.member_access (|
            M.get_name (| "X" |),
            "A"
          |)
        |) in
      let _ :=
        M.return_ (|
          M.bin_op (|
            "==",
            M.get_name (| "garbled" |),
            M.get_name (| "garbled" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition test_neq (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "garbled" ],
          Value.Default
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 43
src: 386:45:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 409:7:0declaration: 41isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      let _ :=
        M.return_ (|
          M.bin_op (|
            "!=",
            M.get_name (| "garbled" |),
            M.get_name (| "garbled" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
