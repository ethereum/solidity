(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  (* Struct Data *)

  Definition data : Value.t :=
    undefined.

  Definition  (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.index_access (|
              M.get_name (| "data" |),
              Some (Value.Integer 7)
            |),
            "a"
          |),
          Value.Integer 1
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.index_access (|
              M.get_name (| "data" |),
              Some (Value.Integer 7)
            |),
            "b"
          |),
          Value.Integer 2
        |) in
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.member_access (|
              M.index_access (|
                M.get_name (| "data" |),
                Some (Value.Integer 7)
              |),
              "c"
            |),
            Some (Value.Integer 0)
          |),
          Value.Integer 3
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.index_access (|
              M.get_name (| "data" |),
              Some (Value.Integer 7)
            |),
            "d"
          |),
          Value.Bool true
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
