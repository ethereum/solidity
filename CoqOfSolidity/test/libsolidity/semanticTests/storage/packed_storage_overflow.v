(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition x : Value.t :=
    Value.Integer 0x1234.

  Definition a : Value.t :=
    Value.Integer 0xffff.

  Definition b : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        let _ :=
          M.un_op (|
            false,
            "++",
            M.get_name (| "a" |)
          |) in
        Value.Tuple [] in
      let _ :=
        M.define (|
          [ "c" ],
          M.get_name (| "b" |)
        |) in
      let _ :=
        M.un_op (|
          true,
          "delete",
          M.get_name (| "b" |)
        |) in
      let _ :=
        let _ :=
          M.assign (|
            "-=",
            M.get_name (| "a" |),
            Value.Integer 2
          |) in
        Value.Tuple [] in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.get_name (| "x" |),
            M.get_name (| "c" |),
            M.get_name (| "b" |),
            M.get_name (| "a" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
