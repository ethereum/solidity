(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition memorySize (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        (* Beginning of a node! *)
id: 5
src: 80:29:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 91:1:0declaration: 3isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition withValue (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Default
        |) in
      let _ :=
        M.define (|
          [ "memorySizeBefore" ],
          M.call (|
            M.get_name (| "memorySize" |),
            []
          |)
        |) in
      let _ :=
        M.define (|
          [ "t" ],
          M.get_name (| "x" |)
        |) in
      let _ :=
        M.define (|
          [ "memorySizeAfter" ],
          M.call (|
            M.get_name (| "memorySize" |),
            []
          |)
        |) in
      let _ :=
        M.return_ (|
          M.bin_op (|
            "-",
            M.get_name (| "memorySizeAfter" |),
            M.get_name (| "memorySizeBefore" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition withoutValue (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Default
        |) in
      let _ :=
        M.define (|
          [ "memorySizeBefore" ],
          M.call (|
            M.get_name (| "memorySize" |),
            []
          |)
        |) in
      let _ :=
        M.define (|
          [ "t" ],
          Value.Default
        |) in
      let _ :=
        M.define (|
          [ "memorySizeAfter" ],
          M.call (|
            M.get_name (| "memorySize" |),
            []
          |)
        |) in
      let _ :=
        M.return_ (|
          M.bin_op (|
            "-",
            M.get_name (| "memorySizeAfter" |),
            M.get_name (| "memorySizeBefore" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
