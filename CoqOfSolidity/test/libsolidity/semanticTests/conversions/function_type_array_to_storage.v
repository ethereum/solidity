(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition externalDefaultArray : Value.t :=
    undefined.

  Definition externalViewArray : Value.t :=
    undefined.

  Definition externalPureArray : Value.t :=
    undefined.

  Definition internalDefaultArray : Value.t :=
    undefined.

  Definition internalViewArray : Value.t :=
    undefined.

  Definition internalPureArray : Value.t :=
    undefined.

  Definition externalDefault (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 11
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition externalView (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 12
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition externalPure (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 13
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition internalDefault (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 21
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition internalView (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 22
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition internalPure (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 23
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition testViewToDefault (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "externalDefaultArray" |),
          Value.Array [
            M.member_access (|
              M.get_name (| "this" |),
              "externalView"
            |)
          ]
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "internalDefaultArray" |),
          Value.Array [
            M.get_name (| "internalView" |)
          ]
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.call (|
              M.index_access (|
                M.get_name (| "externalDefaultArray" |),
                Some (Value.Integer 0)
              |),
              []
            |),
            M.call (|
              M.index_access (|
                M.get_name (| "internalDefaultArray" |),
                Some (Value.Integer 0)
              |),
              []
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition testPureToDefault (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "externalDefaultArray" |),
          Value.Array [
            M.member_access (|
              M.get_name (| "this" |),
              "externalPure"
            |)
          ]
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "internalDefaultArray" |),
          Value.Array [
            M.get_name (| "internalPure" |)
          ]
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.call (|
              M.index_access (|
                M.get_name (| "externalDefaultArray" |),
                Some (Value.Integer 0)
              |),
              []
            |),
            M.call (|
              M.index_access (|
                M.get_name (| "internalDefaultArray" |),
                Some (Value.Integer 0)
              |),
              []
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition testPureToView (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "externalViewArray" |),
          Value.Array [
            M.member_access (|
              M.get_name (| "this" |),
              "externalPure"
            |)
          ]
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "internalViewArray" |),
          Value.Array [
            M.get_name (| "internalPure" |)
          ]
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.call (|
              M.index_access (|
                M.get_name (| "externalViewArray" |),
                Some (Value.Integer 0)
              |),
              []
            |),
            M.call (|
              M.index_access (|
                M.get_name (| "internalViewArray" |),
                Some (Value.Integer 0)
              |),
              []
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
