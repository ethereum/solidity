(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  Definition foo (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "d" |),
          M.call (|
            M.get_name (| "keccak256" |),
            [
              Value.String "foo"
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition bar (α : list Value.t) : M :=
    match α with
    | [a, b] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "d" |),
          M.call (|
            M.get_name (| "keccak256" |),
            [
              M.call (|
                M.member_access (|
                  M.get_name (| "abi" |),
                  "encodePacked"
                |),
                [
                  M.get_name (| "a" |),
                  M.get_name (| "b" |),
                  M.call (|
                    Ty.path "uint8",
                    [
                      Value.Integer 145
                    ]
                  |),
                  Value.String "foo"
                ]
              |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
