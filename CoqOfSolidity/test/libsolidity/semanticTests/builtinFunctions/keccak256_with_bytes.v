(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  Definition data : Value.t :=
    undefined.

  Definition foo (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "data" |),
            "push"
          |),
          [
            Value.String "f"
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "data" |),
            "push"
          |),
          [
            Value.String "o"
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "data" |),
            "push"
          |),
          [
            Value.String "o"
          ]
        |) in
      let _ :=
        M.return_ (|
          M.bin_op (|
            "==",
            M.call (|
              M.get_name (| "keccak256" |),
              [
                M.get_name (| "data" |)
              ]
            |),
            M.call (|
              M.get_name (| "keccak256" |),
              [
                Value.String "foo"
              ]
            |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
