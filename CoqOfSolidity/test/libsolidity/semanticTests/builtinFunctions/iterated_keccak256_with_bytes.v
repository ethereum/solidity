(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  Definition data : Value.t :=
    undefined.

  Definition foo (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "data" |),
            "push"
          |),
          [
            Value.String "x"
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "data" |),
            "push"
          |),
          [
            Value.String "y"
          ]
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "data" |),
            "push"
          |),
          [
            Value.String "z"
          ]
        |) in
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "keccak256" |),
            [
              M.call (|
                M.member_access (|
                  M.get_name (| "abi" |),
                  "encodePacked"
                |),
                [
                  Value.String "b",
                  M.call (|
                    M.get_name (| "keccak256" |),
                    [
                      M.get_name (| "data" |)
                    ]
                  |),
                  Value.String "a"
                ]
              |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
