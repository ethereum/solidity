(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition a : Value.t :=
    Value.Integer 7.

  Definition b : Value.t :=
    Value.Integer 3.

  Definition c : Value.t :=
    M.bin_op (|
      "/",
      M.get_name (| "a" |),
      M.get_name (| "b" |)
    |).

  Definition d : Value.t :=
    M.bin_op (|
      "/",
      Value.Tuple [
        M.un_op (|
          true,
          "-",
          M.get_name (| "a" |)
        |)
      ],
      M.get_name (| "b" |)
    |).

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Default
        |) in
      let _ :=
        M.define (|
          [ "y" ],
          Value.Default
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.member_access (|
              M.get_name (| "x" |),
              "length"
            |),
            M.get_name (| "c" |),
            M.member_access (|
              M.get_name (| "y" |),
              "length"
            |),
            M.un_op (|
              true,
              "-",
              M.get_name (| "d" |)
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
