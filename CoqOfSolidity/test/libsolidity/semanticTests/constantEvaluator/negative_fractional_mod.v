(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          M.call (|
            Ty.path "int",
            [
              M.bin_op (|
                "*",
                Value.Tuple [
                  M.un_op (|
                    true,
                    "-",
                    Value.Tuple [
                      M.bin_op (|
                        "%",
                        M.un_op (|
                          true,
                          "-",
                          Value.Integer 5.2
                        |),
                        Value.Integer 3
                      |)
                    ]
                  |)
                ],
                Value.Integer 5
              |)
            ]
          |)
        |) in
      let _ :=
        M.define (|
          [ "t" ],
          Value.Integer 5
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.get_name (| "x" |),
            M.bin_op (|
              "*",
              Value.Tuple [
                M.un_op (|
                  true,
                  "-",
                  Value.Tuple [
                    M.bin_op (|
                      "%",
                      M.un_op (|
                        true,
                        "-",
                        M.get_name (| "t" |)
                      |),
                      Value.Integer 3
                    |)
                  ]
                |)
              ],
              Value.Integer 5
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
