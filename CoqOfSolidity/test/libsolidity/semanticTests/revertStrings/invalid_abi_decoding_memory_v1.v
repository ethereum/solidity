(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv1 *)

(* Contract *)
Module C.
  Definition dyn (α : list Value.t) : M :=
    match α with
    | [ptr, start, x] =>
      let _ :=
        (* Beginning of a node! *)
id: 12
src: 113:84:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 186:3:0declaration: 3isSlot: isOffset: alueSize: src: 137:5:0declaration: 5isSlot: isOffset: alueSize: src: 154:5:0declaration: 5isSlot: isOffset: alueSize: src: 165:5:0declaration: 5isSlot: isOffset: alueSize: src: 191:1:0declaration: 7isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [ptr, start, x] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "dyn"
          |),
          [
            M.get_name (| "ptr" |),
            M.get_name (| "start" |),
            M.get_name (| "x" |)
          ]
        |) in
      let _ :=
        M.return_ (|
          Value.Bool true
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
