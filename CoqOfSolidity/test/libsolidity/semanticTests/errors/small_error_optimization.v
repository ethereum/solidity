(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Error E *)

(* Contract *)
Module A.
  Definition x : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.for_ (|
          M.define (|
            [ "i" ],
            Value.Integer 0
          |),
          M.bin_op (|
            "<",
            M.get_name (| "i" |),
            Value.Integer 100
          |),
          M.un_op (|
            true,
            "++",
            M.get_name (| "i" |)
          |),
          M.call (|
            M.member_access (|
              M.get_name (| "x" |),
              "push"
            |),
            [
              M.call (|
                Ty.path "uint8",
                [
                  M.get_name (| "i" |)
                ]
              |)
            ]
          |)
        |) in
      let _ :=
        M.revert (|
          M.call (|
            M.get_name (| "E" |),
            []
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.


(* Contract *)
Module B.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.member_access (|
            Value.Tuple [
              M.call (|
                NewExpression Ty.path "A"
,
                []
              |)
            ],
            "f"
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End B.
