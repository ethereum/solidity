(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module D.
  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End D.


(* Contract *)
Module C.
  Definition foo (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        FunctionCallOptions NewExpression Ty.path "D"
 [salt, value, ] Value.String "abc", Value.Integer 3
 in
      let _ :=
        FunctionCallOptions NewExpression Ty.path "D"
 [salt, ] Value.String "abc"
 in
      let _ :=
        FunctionCallOptions NewExpression Ty.path "D"
 [value, ] M.bin_op (|
          "+",
          Value.Integer 5,
          Value.Integer 5
        |)
 in
      let _ :=
        FunctionCallOptions NewExpression Ty.path "D"
 [salt, ] Value.String "aabbcc"
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
