(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Default
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "x" |),
          Value.Integer 1
        |) in
      let _ :=
        if Value.Bool true then
          let _ :=
            M.define (|
              [ "x" ],
              Value.Default
            |) in
          let _ :=
            M.assign (|
              "=",
              M.get_name (| "x" |),
              Value.Integer 2
            |) in
          Value.Tuple []
        else
          Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
