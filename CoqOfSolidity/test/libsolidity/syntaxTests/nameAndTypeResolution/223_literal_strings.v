(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module Foo.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "long" ],
          Value.String "01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
        |) in
      let _ :=
        M.define (|
          [ "short" ],
          Value.String "123"
        |) in
      let _ :=
        M.get_name (| "long" |) in
      let _ :=
        M.get_name (| "short" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Foo.
