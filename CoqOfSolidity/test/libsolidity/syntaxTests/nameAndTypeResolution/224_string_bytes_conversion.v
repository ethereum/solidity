(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module Test.
  Definition s : Value.t :=
    undefined.

  Definition b : Value.t :=
    undefined.

  Definition h (α : list Value.t) : M :=
    match α with
    | [_s] =>
      let _ :=
        M.member_access (|
          M.call (|
            Ty.path "bytes",
            [
              M.get_name (| "_s" |)
            ]
          |),
          "length"
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition i (α : list Value.t) : M :=
    match α with
    | [_s] =>
      let _ :=
        M.member_access (|
          M.call (|
            Ty.path "bytes",
            [
              M.get_name (| "_s" |)
            ]
          |),
          "length"
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition j (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.member_access (|
          M.call (|
            Ty.path "bytes",
            [
              M.get_name (| "s" |)
            ]
          |),
          "length"
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition k (α : list Value.t) : M :=
    match α with
    | [_b] =>
      let _ :=
        M.call (|
          Ty.path "string",
          [
            M.get_name (| "_b" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition l (α : list Value.t) : M :=
    match α with
    | [_b] =>
      let _ :=
        M.call (|
          Ty.path "string",
          [
            M.get_name (| "_b" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition m (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          Ty.path "string",
          [
            M.get_name (| "b" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Test.
