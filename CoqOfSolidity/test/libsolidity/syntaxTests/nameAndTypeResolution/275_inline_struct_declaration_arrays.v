(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Struct S *)

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Array [
            M.call (|
              M.get_name (| "S" |),
              [
                Value.Integer 1,
                Value.String "fish"
              ]
            |),
            M.call (|
              M.get_name (| "S" |),
              [
                Value.Integer 2,
                Value.String "fish"
              ]
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
