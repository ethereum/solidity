(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Struct R *)

  (* Struct S *)

  Definition data : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          M.get_name (| "data" |)
        |) in
      let _ :=
        M.define (|
          [ "y" ],
          Value.Default
        |) in
      let _ :=
        M.define (|
          [ "z" ],
          Value.Default
        |) in
      let _ :=
        M.index_access (|
          M.member_access (|
            M.get_name (| "C" |),
            "S"
          |),
          Some (Value.Integer 10)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.member_access (|
            M.get_name (| "y" |),
            "a"
          |),
          Value.Integer 2
        |) in
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.index_access (|
              M.index_access (|
                M.member_access (|
                  M.get_name (| "x" |),
                  "c"
                |),
                Some (Value.Integer 1)
              |),
              Some (Value.Integer 2)
            |),
            Some (Value.Integer 3)
          |),
          Value.Integer 9
        |) in
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.index_access (|
              M.member_access (|
                M.member_access (|
                  M.get_name (| "x" |),
                  "d"
                |),
                "y"
              |),
              Some (Value.Integer 2)
            |),
            Some (Value.Integer 2)
          |),
          Value.Integer 3
        |) in
      let _ :=
        M.get_name (| "z" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
