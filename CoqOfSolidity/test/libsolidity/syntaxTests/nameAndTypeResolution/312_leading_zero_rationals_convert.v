(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          Value.Integer 0.5
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          Value.Integer 0.0000000000000006661338147750939242541790008544921875
        |) in
      let _ :=
        M.define (|
          [ "c" ],
          M.un_op (|
            true,
            "-",
            Value.Integer 0.5
          |)
        |) in
      let _ :=
        M.define (|
          [ "d" ],
          M.un_op (|
            true,
            "-",
            Value.Integer 0.0000000000000006661338147750939242541790008544921875
          |)
        |) in
      let _ :=
        M.get_name (| "a" |) in
      let _ :=
        M.get_name (| "b" |) in
      let _ :=
        M.get_name (| "c" |) in
      let _ :=
        M.get_name (| "d" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.
