(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 7
src: 17:60:0
nodeType: ModifierDefinition
name: alwaysRevert
nameLocation: 26:12:0
documentation: 
visibility: internal
parameters: ParameterList.make []
virtual: 0
overrides: 
body: let _ :=
    (* Beginning of a node! *)
id: 2
src: 51:1:0
nodeType: PlaceholderStatement
 in
  let _ :=
    M.call (|
      M.get_name (| "revert" |),
      []
    |) in
  Value.Tuple []


  (* Beginning of a node! *)
id: 15
src: 82:67:0
nodeType: ModifierDefinition
name: ifFlag
nameLocation: 91:6:0
documentation: 
visibility: internal
parameters: ParameterList.make [
    Definition flag : Value.t :=
      undefined.
  ]
virtual: 0
overrides: 
body: let _ :=
    if M.get_name (| "flag" |) then
      (* Beginning of a node! *)
id: 12
src: 141:1:0
nodeType: PlaceholderStatement

    else
      Value.Tuple [] in
  Value.Tuple []


  (* Struct S *)

  Definition s : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [flag] =>
      let _ :=
        if M.get_name (| "flag" |) then
          M.get_name (| "s" |)
        else
          Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [flag] =>
      let _ :=
        M.get_name (| "s" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
