(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition s : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x" ],
          Value.Default
        |) in
      let _ :=
        M.define (|
          [ "y" ],
          Conditional M.bin_op (|
            ">",
            M.index_access (|
              Value.Tuple [
                M.assign (|
                  "=",
                  M.get_name (| "x" |),
                  M.get_name (| "s" |)
                |)
              ],
              Some (Value.Integer 0)
            |),
            Value.Integer 0
          |) M.get_name (| "x" |) M.get_name (| "x" |)

        |) in
      let _ :=
        M.get_name (| "y" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
