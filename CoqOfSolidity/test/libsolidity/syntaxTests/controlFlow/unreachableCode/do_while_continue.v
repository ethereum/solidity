(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.while (|
          WhileKind.DoWhile,
          Value.Bool false,
          let _ :=
            M.define (|
              [ "a" ],
              Value.Integer 42
            |) in
          let _ :=
            M.get_name (| "a" |) in
          let _ :=
            M.continue (||) in
          let _ :=
            M.return_ (|
              Value.Tuple []
            |) in
          Value.Tuple []
        |) in
      let _ :=
        M.return_ (|
          Value.Tuple []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
