(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [_] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [_] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          M.call (|
            Ty.path "address",
            [
              Value.Integer 0
            ]
          |)
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          M.call (|
            M.get_name (| "f" |),
            [
              M.get_name (| "a" |)
            ]
          |)
        |) in
      let _ :=
        M.get_name (| "b" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
