(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          M.call (|
            Ty.path "address",
            [
              Value.Integer 0
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "a" |),
          M.call (|
            Ty.path "address",
            [
              Value.Integer 1
            ]
          |)
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          Value.Integer 0x0123456789012345678901234567890123456789
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "b" |),
          Value.Integer 0x9876543210987654321098765432109876543210
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "b" |),
          Value.Integer 0x9876_5432_1098_7654_3210_9876_5432_1098_7654_3210
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
