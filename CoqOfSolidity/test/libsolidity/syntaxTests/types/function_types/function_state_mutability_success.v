(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module Test.
  Definition y : Value.t :=
    undefined.

  Definition internalPureFunc (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition internalViewFunc (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "+",
            M.get_name (| "x" |),
            M.get_name (| "y" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition internalMutableFunc (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "y" |),
          M.get_name (| "x" |)
        |) in
      let _ :=
        M.return_ (|
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition externalPureFunc (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition externalViewFunc (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "+",
            M.get_name (| "x" |),
            M.get_name (| "y" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition externalPayableFunc (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "+",
            M.get_name (| "x" |),
            M.get_name (| "y" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition externalMutableFunc (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "y" |),
          M.get_name (| "x" |)
        |) in
      let _ :=
        M.return_ (|
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition funcTakesInternalPure (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "a" |),
            [
              Value.Integer 4
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition funcTakesInternalView (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "a" |),
            [
              Value.Integer 4
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition funcTakesInternalMutable (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "a" |),
            [
              Value.Integer 4
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition funcTakesExternalPure (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "a" |),
            [
              Value.Integer 4
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition funcTakesExternalView (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "a" |),
            [
              Value.Integer 4
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition funcTakesExternalPayable (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "a" |),
            [
              Value.Integer 4
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition funcTakesExternalMutable (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.get_name (| "a" |),
            [
              Value.Integer 4
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition tests (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.get_name (| "funcTakesInternalPure" |),
          [
            M.get_name (| "internalPureFunc" |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesInternalView" |),
          [
            M.get_name (| "internalPureFunc" |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesInternalView" |),
          [
            M.get_name (| "internalViewFunc" |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesInternalMutable" |),
          [
            M.get_name (| "internalPureFunc" |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesInternalMutable" |),
          [
            M.get_name (| "internalViewFunc" |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesInternalMutable" |),
          [
            M.get_name (| "internalMutableFunc" |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesExternalPure" |),
          [
            M.member_access (|
              M.get_name (| "this" |),
              "externalPureFunc"
            |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesExternalView" |),
          [
            M.member_access (|
              M.get_name (| "this" |),
              "externalPureFunc"
            |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesExternalView" |),
          [
            M.member_access (|
              M.get_name (| "this" |),
              "externalViewFunc"
            |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesExternalPayable" |),
          [
            M.member_access (|
              M.get_name (| "this" |),
              "externalPayableFunc"
            |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesExternalMutable" |),
          [
            M.member_access (|
              M.get_name (| "this" |),
              "externalPureFunc"
            |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesExternalMutable" |),
          [
            M.member_access (|
              M.get_name (| "this" |),
              "externalViewFunc"
            |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesExternalMutable" |),
          [
            M.member_access (|
              M.get_name (| "this" |),
              "externalPayableFunc"
            |)
          ]
        |) in
      let _ :=
        M.call (|
          M.get_name (| "funcTakesExternalMutable" |),
          [
            M.member_access (|
              M.get_name (| "this" |),
              "externalMutableFunc"
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Test.
