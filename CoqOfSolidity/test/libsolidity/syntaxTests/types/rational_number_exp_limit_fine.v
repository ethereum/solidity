(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          Value.Default
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "a" |),
          M.bin_op (|
            "**",
            Value.Integer 0,
            Value.Integer 1E1233
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "a" |),
          M.bin_op (|
            "**",
            Value.Integer 1,
            Value.Integer 1E1233
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "a" |),
          M.bin_op (|
            "**",
            M.un_op (|
              true,
              "-",
              Value.Integer 1
            |),
            Value.Integer 1E1233
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "a" |),
          Value.Integer 0E123456789
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
