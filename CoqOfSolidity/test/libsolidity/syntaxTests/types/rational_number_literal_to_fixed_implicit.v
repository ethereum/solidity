(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition literalToUFixed (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          Value.Integer 0.10
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          Value.Integer 0.00
        |) in
      let _ :=
        M.define (|
          [ "c" ],
          Value.Integer 2.55
        |) in
      let _ :=
        M.get_name (| "a" |) in
      let _ :=
        M.get_name (| "b" |) in
      let _ :=
        M.get_name (| "c" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition literalToFixed (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          Value.Integer 0.1
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          Value.Integer 12.7
        |) in
      let _ :=
        M.define (|
          [ "c" ],
          M.un_op (|
            true,
            "-",
            Value.Integer 12.8
          |)
        |) in
      let _ :=
        M.get_name (| "a" |) in
      let _ :=
        M.get_name (| "b" |) in
      let _ :=
        M.get_name (| "c" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
