(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition map : Value.t :=
    undefined.

  Definition fun (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          M.get_name (| "map" |)
        |) in
      let _ :=
        M.define (|
          [ "b" ],
          M.get_name (| "map" |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "b" |),
          M.get_name (| "a" |)
        |) in
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            M.get_name (| "b" |)
          ],
          M.get_name (| "a" |)
        |) in
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            M.get_name (| "b" |),
            M.get_name (| "b" |)
          ],
          Value.Tuple [
            M.get_name (| "a" |),
            M.get_name (| "a" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
