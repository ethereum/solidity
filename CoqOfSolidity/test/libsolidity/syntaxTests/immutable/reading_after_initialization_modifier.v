(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition x : Value.t :=
    Value.Integer 0.

  Definition y : Value.t :=
    Value.Integer 0.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  (* Beginning of a node! *)
id: 22
src: 101:54:0
nodeType: ModifierDefinition
name: readX
nameLocation: 110:5:0
documentation: 
visibility: internal
parameters: ParameterList.make []
virtual: 0
overrides: 
body: let _ :=
    (* Beginning of a node! *)
id: 14
src: 128:1:0
nodeType: PlaceholderStatement
 in
  let _ :=
    M.assign (|
      "=",
      M.get_name (| "y" |),
      M.bin_op (|
        "+",
        M.get_name (| "x" |),
        Value.Integer 1
      |)
    |) in
  Value.Tuple []

End C.
