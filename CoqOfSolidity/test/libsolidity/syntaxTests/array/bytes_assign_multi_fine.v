(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition x : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 0)
            |),
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 1)
            |)
          ],
          Value.Tuple [
            Value.Integer 0,
            Value.Integer 0
          ]
        |) in
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 0)
            |),
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 1)
            |)
          ],
          Value.Tuple [
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 1)
            |),
            M.index_access (|
              M.get_name (| "x" |),
              Some (Value.Integer 0)
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
