(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition a : Value.t :=
    undefined.

  Definition b : Value.t :=
    undefined.

  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.define (|
          [ "s1" ],
          M.get_name (| "a" |)
        |) in
      let _ :=
        M.define (|
          [ "s2" ],
          M.call (|
            NewExpression Ty.array (Ty.path "uint") None
,
            [
              Value.Integer 42
            ]
          |)
        |) in
      let _ :=
        M.define (|
          [ "s3" ],
          M.get_name (| "b" |)
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "s1" |),
            "push"
          |),
          [
            Value.Integer 42
          ]
        |) in
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "s2" |),
            Some (Value.Integer 3)
          |),
          Value.Integer 12
        |) in
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "s3" |),
            "push"
          |),
          [
            Value.Integer 42
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
