(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.get_name (| "g" |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.get_name (| "f" |),
          []
        |) in
      let _ :=
        M.call (|
          M.get_name (| "g" |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition h (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.get_name (| "h" |),
          []
        |) in
      let _ :=
        M.call (|
          M.get_name (| "g" |),
          []
        |) in
      let _ :=
        M.call (|
          M.get_name (| "f" |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition i (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.get_name (| "i" |),
          []
        |) in
      let _ :=
        M.call (|
          M.get_name (| "h" |),
          []
        |) in
      let _ :=
        M.call (|
          M.get_name (| "g" |),
          []
        |) in
      let _ :=
        M.call (|
          M.get_name (| "f" |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
