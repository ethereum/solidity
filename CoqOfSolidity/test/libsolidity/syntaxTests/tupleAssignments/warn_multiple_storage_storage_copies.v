(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Struct S *)

  Definition x : Value.t :=
    undefined.

  Definition y : Value.t :=
    undefined.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            M.get_name (| "x" |),
            M.get_name (| "y" |)
          ],
          Value.Tuple [
            M.get_name (| "y" |),
            M.get_name (| "x" |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "z" ],
          Value.Default
        |) in
      let _ :=
        M.assign (|
          "=",
          Value.Tuple [
            Value.Tuple [
              M.get_name (| "x" |),
              M.get_name (| "y" |)
            ],
            M.get_name (| "z" |)
          ],
          Value.Tuple [
            Value.Tuple [
              M.get_name (| "y" |),
              M.get_name (| "x" |)
            ],
            Value.Integer 0
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
