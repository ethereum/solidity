(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Axiom user_type_MyInt : Ty.path "MyInt" = Ty.path "uint".

Axiom user_type_MyAddress : Ty.path "MyAddress" = Ty.path "address".

Definition f (α : list Value.t) : M :=
  match α with
  | [] =>
    let _ :=
      M.define (|
        [ "a" ],
        Value.Default
      |) in
    let _ :=
      M.define (|
        [ "b" ],
        M.get_name (| "a" |)
      |) in
    let _ :=
      M.define (|
        [ "c" ],
        Value.Default
      |) in
    let _ :=
      M.define (|
        [ "d" ],
        M.get_name (| "c" |)
      |) in
    let _ :=
      M.get_name (| "b" |) in
    let _ :=
      M.get_name (| "d" |) in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Definition g (α : list Value.t) : M :=
  match α with
  | [a] =>
    let _ :=
      M.return_ (|
        M.get_name (| "a" |)
      |) in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.