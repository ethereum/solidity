(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Axiom user_type_T : Ty.path "T" = Ty.path "uint".
End C.


(* Library *)
Module L.
  Axiom user_type_T : Ty.path "T" = Ty.path "uint".
End L.


(* Interface *)
Module I.
  Axiom user_type_T : Ty.path "T" = Ty.path "uint".
End I.


(* Contract *)
Module D.
  Definition x : Value.t :=
    M.call (|
      M.member_access (|
        M.member_access (|
          M.get_name (| "C" |),
          "T"
        |),
        "wrap"
      |),
      [
        M.call (|
          Ty.path "uint",
          [
            Value.Integer 1
          ]
        |)
      ]
    |).

  Definition y : Value.t :=
    M.call (|
      M.member_access (|
        M.member_access (|
          M.get_name (| "L" |),
          "T"
        |),
        "wrap"
      |),
      [
        M.call (|
          Ty.path "uint",
          [
            Value.Integer 1
          ]
        |)
      ]
    |).

  Definition z : Value.t :=
    M.call (|
      M.member_access (|
        M.member_access (|
          M.get_name (| "I" |),
          "T"
        |),
        "wrap"
      |),
      [
        M.call (|
          Ty.path "uint",
          [
            Value.Integer 1
          ]
        |)
      ]
    |).
End D.
