(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition viewAssignment (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "min" ],
          M.member_access (|
            M.call (|
              M.get_name (| "type" |),
              [
                Ty.path "int"
              ]
            |),
            "min"
          |)
        |) in
      let _ :=
        M.get_name (| "min" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition assignment (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "max" ],
          M.member_access (|
            M.call (|
              M.get_name (| "type" |),
              [
                Ty.path "int"
              ]
            |),
            "max"
          |)
        |) in
      let _ :=
        M.get_name (| "max" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
