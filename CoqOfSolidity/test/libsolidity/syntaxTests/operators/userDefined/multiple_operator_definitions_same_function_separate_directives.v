(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Axiom user_type_Int : Ty.path "Int" = Ty.path "int32".

Axiom using : M.usingFunctions (|
    Some (Ty.path "Int"),
    UsingKind.Global,
    [
    UsingFunction.Operator "+" "add",
  ]
  |).

Axiom using : M.usingFunctions (|
    Some (Ty.path "Int"),
    UsingKind.Global,
    [
    UsingFunction.Operator "+" "add",
  ]
  |).

Definition add (α : list Value.t) : M :=
  match α with
  | [_, _] =>
    let _ :=
       in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Definition f (α : list Value.t) : M :=
  match α with
  | [a, b] =>
    let _ :=
      M.bin_op (|
        "+",
        M.call (|
          M.member_access (|
            M.get_name (| "Int" |),
            "wrap"
          |),
          [
            M.get_name (| "a" |)
          ]
        |),
        M.call (|
          M.member_access (|
            M.get_name (| "Int" |),
            "wrap"
          |),
          [
            M.get_name (| "b" |)
          ]
        |)
      |) in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.