(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Axiom user_type_AP : Ty.path "AP" = Ty.path "address".

Definition sub (α : list Value.t) : M :=
  match α with
  | [_, _] =>
    let _ :=
       in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Definition unsub (α : list Value.t) : M :=
  match α with
  | [_] =>
    let _ :=
       in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Definition attachedPure (α : list Value.t) : M :=
  match α with
  | [_, _, _] =>
    let _ :=
       in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Definition attachedView (α : list Value.t) : M :=
  match α with
  | [_] =>
    let _ :=
       in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Definition attached (α : list Value.t) : M :=
  match α with
  | [_, _] =>
    let _ :=
       in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Axiom using : M.usingFunctions (|
    Some (Ty.path "AP"),
    UsingKind.Global,
    [
    UsingFunction.Operator "-" "sub",
    UsingFunction.Function "attachedPure",
    UsingFunction.Function "attachedView",
    UsingFunction.Operator "-" "unsub",
    UsingFunction.Function "attached",
  ]
  |).