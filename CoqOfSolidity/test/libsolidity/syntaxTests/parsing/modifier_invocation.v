(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module c.
  (* Beginning of a node! *)
id: 17
src: 17:67:0
nodeType: ModifierDefinition
name: mod1
nameLocation: 26:4:0
documentation: 
visibility: internal
parameters: ParameterList.make [
    Definition a : Value.t :=
      undefined.
  ]
virtual: 0
overrides: 
body: let _ :=
    if M.bin_op (|
      "==",
      M.member_access (|
        M.get_name (| "msg" |),
        "sender"
      |),
      M.call (|
        Ty.path "address",
        [
          M.call (|
            Ty.path "uint160",
            [
              M.get_name (| "a" |)
            ]
          |)
        ]
      |)
    |) then
      (* Beginning of a node! *)
id: 14
src: 80:1:0
nodeType: PlaceholderStatement

    else
      Value.Tuple [] in
  Value.Tuple []


  (* Beginning of a node! *)
id: 29
src: 89:50:0
nodeType: ModifierDefinition
name: mod2
nameLocation: 98:4:0
documentation: 
visibility: internal
parameters: ParameterList.make []
virtual: 0
overrides: 
body: let _ :=
    if M.bin_op (|
      "==",
      M.member_access (|
        M.get_name (| "msg" |),
        "sender"
      |),
      M.call (|
        Ty.path "address",
        [
          Value.Integer 2
        ]
      |)
    |) then
      (* Beginning of a node! *)
id: 26
src: 135:1:0
nodeType: PlaceholderStatement

    else
      Value.Tuple [] in
  Value.Tuple []


  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End c.
