(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "x1" ],
          Value.Integer 0x8765_4321
        |) in
      let _ :=
        M.define (|
          [ "x2" ],
          Value.Integer 0x765_4321
        |) in
      let _ :=
        M.define (|
          [ "x3" ],
          Value.Integer 0x65_4321
        |) in
      let _ :=
        M.define (|
          [ "x4" ],
          Value.Integer 0x5_4321
        |) in
      let _ :=
        M.define (|
          [ "x5" ],
          Value.Integer 0x123_1234_1234_1234
        |) in
      let _ :=
        M.define (|
          [ "x6" ],
          Value.Integer 0x123456_1234_1234
        |) in
      let _ :=
        M.get_name (| "x1" |) in
      let _ :=
        M.get_name (| "x2" |) in
      let _ :=
        M.get_name (| "x3" |) in
      let _ :=
        M.get_name (| "x4" |) in
      let _ :=
        M.get_name (| "x5" |) in
      let _ :=
        M.get_name (| "x6" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
