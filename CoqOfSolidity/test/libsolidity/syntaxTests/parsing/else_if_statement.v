(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition fun (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        if M.bin_op (|
          "<",
          M.get_name (| "a" |),
          Value.Integer 0
        |) then
          M.assign (|
            "=",
            M.get_name (| "b" |),
            Value.Integer 0x67
          |)
        else
          if M.bin_op (|
            "==",
            M.get_name (| "a" |),
            Value.Integer 0
          |) then
            M.assign (|
              "=",
              M.get_name (| "b" |),
              Value.Integer 0x12
            |)
          else
            M.assign (|
              "=",
              M.get_name (| "b" |),
              Value.Integer 0x78
            |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
