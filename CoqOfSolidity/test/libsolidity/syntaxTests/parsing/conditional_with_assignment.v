(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "y" ],
          Value.Integer 1
        |) in
      let _ :=
        M.define (|
          [ "x" ],
          Conditional M.bin_op (|
            "<",
            Value.Integer 3,
            Value.Integer 0
          |) M.assign (|
            "=",
            M.get_name (| "y" |),
            Value.Integer 3
          |) Value.Integer 6

        |) in
      let _ :=
        Conditional Value.Bool true M.assign (|
          "=",
          M.get_name (| "x" |),
          Value.Integer 3
        |) Value.Integer 4
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.
