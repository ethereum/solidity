(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module Lib.
  Definition foo (α : list Value.t) : M :=
    match α with
    | [value] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "+",
            M.get_name (| "value" |),
            Value.Integer 42
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Lib.


(* Contract *)
Module A.
  Axiom using : M.usingLibrary (|
      Some (Ty.path "uint256"),
      UsingKind.Local,
      "Lib"
    |).
End A.


(* Contract *)
Module B.
  Axiom using : M.usingLibrary (|
      Some (Ty.path "uint256"),
      UsingKind.Local,
      "Lib"
    |).

  Definition bar (α : list Value.t) : M :=
    match α with
    | [value] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "value" |),
              "foo"
            |),
            []
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End B.
