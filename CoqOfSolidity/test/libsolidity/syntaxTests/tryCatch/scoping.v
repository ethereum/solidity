(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module Test.
  Definition test (Î± : list Value.t) : M :=
    match Î± with
    | [_ext] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.call (|
              M.get_name (| "Test" |),
              [
                M.get_name (| "_ext" |)
              ]
            |),
            "test"
          |),
          [
            M.get_name (| "_ext" |)
          ]
        |) TryCatchClause   let _ :=
           in
        Value.Tuple [], TryCatchClause   let _ :=
           in
        Value.Tuple [] in
      let _ :=
        M.define (|
          [ "a" ],
          Value.Integer 1
        |) in
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "a" |),
          Value.Integer 3
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Test.
