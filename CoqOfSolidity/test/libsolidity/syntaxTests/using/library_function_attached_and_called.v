(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module D.
  Definition double (α : list Value.t) : M :=
    match α with
    | [self] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "*",
            Value.Integer 2,
            M.get_name (| "self" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End D.


(* Contract *)
Module C.
  Axiom using : M.usingLibrary (|
      Some (Ty.path "uint"),
      UsingKind.Local,
      "D"
    |).

  Definition f (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "a" |),
            "double"
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
