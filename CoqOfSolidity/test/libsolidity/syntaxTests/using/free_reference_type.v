(* Generated by coq-of-solidity *)
Require Import CoqOfSolidity.CoqOfSolidity.

Definition f (α : list Value.t) : M :=
  match α with
  | [x] =>
    let _ :=
      M.return_ (|
        M.index_access (|
          M.get_name (| "x" |),
          Some (Value.Integer 0)
        |)
      |) in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Definition g (α : list Value.t) : M :=
  match α with
  | [x] =>
    let _ :=
      M.return_ (|
        M.index_access (|
          M.get_name (| "x" |),
          Some (Value.Integer 0)
        |)
      |) in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Definition h (α : list Value.t) : M :=
  match α with
  | [x] =>
    let _ :=
      M.return_ (|
        M.index_access (|
          M.get_name (| "x" |),
          Some (Value.Integer 0)
        |)
      |) in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.

Axiom using : M.usingFunctions (|
    Some (Ty.array (Ty.path "uint") None),
    UsingKind.Local,
    [
    UsingFunction.Function "f",
    UsingFunction.Function "g",
    UsingFunction.Function "h",
  ]
  |).