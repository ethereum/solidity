{
    function f(x) -> t
    {
        let y, z

        // 31 nested additions are computed in
        // exactly 64 expression evaluation steps
        y := add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,x)))))))))))))))))))))))))))))))
        z := add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,y)))))))))))))))))))))))))))))))
        t := add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,add(0x1,z)))))))))))))))))))))))))))))))
    }

    for { let i := 0 } lt(i, 10) { i := add(i, 1) }
    {
        pop(f(i))
    }
}
// ====
// maxExprNesting: 64
// ----
// Execution result: ExecutionOk
// Outer most variable values:
//
// Call trace:
//   [CALL] f(0)
//   │ [RETURN] 93
//   [CALL] f(1)
//   │ [RETURN] 94
//   [CALL] f(2)
//   │ [RETURN] 95
//   [CALL] f(3)
//   │ [RETURN] 96
//   [CALL] f(4)
//   │ [RETURN] 97
//   [CALL] f(5)
//   │ [RETURN] 98
//   [CALL] f(6)
//   │ [RETURN] 99
//   [CALL] f(7)
//   │ [RETURN] 100
//   [CALL] f(8)
//   │ [RETURN] 101
//   [CALL] f(9)
//   │ [RETURN] 102
